// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: pkg/playstore/playstore.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Thanks to https://github.com/NoMore201/googleplay-api
// Both sha1 and sha256 are encoded with base64 with URL and Filename Safe Alphabet with padding removed
type AndroidAppDeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadSize                  *int64             `protobuf:"varint,1,opt,name=downloadSize" json:"downloadSize,omitempty"`
	Sha1                          *string            `protobuf:"bytes,2,opt,name=sha1" json:"sha1,omitempty"`
	DownloadUrl                   *string            `protobuf:"bytes,3,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	AdditionalFile                []*AppFileMetadata `protobuf:"bytes,4,rep,name=additionalFile" json:"additionalFile,omitempty"`
	DownloadAuthCookie            []*HttpCookie      `protobuf:"bytes,5,rep,name=downloadAuthCookie" json:"downloadAuthCookie,omitempty"`
	RefundTimeout                 *int64             `protobuf:"varint,7,opt,name=refundTimeout" json:"refundTimeout,omitempty"`
	ServerInitiated               *bool              `protobuf:"varint,8,opt,name=serverInitiated" json:"serverInitiated,omitempty"`
	PostInstallRefundWindowMillis *int64             `protobuf:"varint,9,opt,name=postInstallRefundWindowMillis" json:"postInstallRefundWindowMillis,omitempty"`
	ImmediateStartNeeded          *bool              `protobuf:"varint,10,opt,name=immediateStartNeeded" json:"immediateStartNeeded,omitempty"`
	EncryptionParams              *EncryptionParams  `protobuf:"bytes,12,opt,name=encryptionParams" json:"encryptionParams,omitempty"`
	DownloadUrlGzipped            *string            `protobuf:"bytes,13,opt,name=downloadUrlGzipped" json:"downloadUrlGzipped,omitempty"`
	DownloadSizeGzipped           *int64             `protobuf:"varint,14,opt,name=downloadSizeGzipped" json:"downloadSizeGzipped,omitempty"`
	Split                         []*Split           `protobuf:"bytes,15,rep,name=split" json:"split,omitempty"`
	Sha256                        *string            `protobuf:"bytes,19,opt,name=sha256" json:"sha256,omitempty"`
}

func (x *AndroidAppDeliveryData) Reset() {
	*x = AndroidAppDeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAppDeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAppDeliveryData) ProtoMessage() {}

func (x *AndroidAppDeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAppDeliveryData.ProtoReflect.Descriptor instead.
func (*AndroidAppDeliveryData) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{0}
}

func (x *AndroidAppDeliveryData) GetDownloadSize() int64 {
	if x != nil && x.DownloadSize != nil {
		return *x.DownloadSize
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetAdditionalFile() []*AppFileMetadata {
	if x != nil {
		return x.AdditionalFile
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetDownloadAuthCookie() []*HttpCookie {
	if x != nil {
		return x.DownloadAuthCookie
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetRefundTimeout() int64 {
	if x != nil && x.RefundTimeout != nil {
		return *x.RefundTimeout
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetServerInitiated() bool {
	if x != nil && x.ServerInitiated != nil {
		return *x.ServerInitiated
	}
	return false
}

func (x *AndroidAppDeliveryData) GetPostInstallRefundWindowMillis() int64 {
	if x != nil && x.PostInstallRefundWindowMillis != nil {
		return *x.PostInstallRefundWindowMillis
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetImmediateStartNeeded() bool {
	if x != nil && x.ImmediateStartNeeded != nil {
		return *x.ImmediateStartNeeded
	}
	return false
}

func (x *AndroidAppDeliveryData) GetEncryptionParams() *EncryptionParams {
	if x != nil {
		return x.EncryptionParams
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetDownloadUrlGzipped() string {
	if x != nil && x.DownloadUrlGzipped != nil {
		return *x.DownloadUrlGzipped
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetDownloadSizeGzipped() int64 {
	if x != nil && x.DownloadSizeGzipped != nil {
		return *x.DownloadSizeGzipped
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetSplit() []*Split {
	if x != nil {
		return x.Split
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetSha256() string {
	if x != nil && x.Sha256 != nil {
		return *x.Sha256
	}
	return ""
}

type Split struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Size               *int64  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	SizeGzipped        *int64  `protobuf:"varint,3,opt,name=sizeGzipped" json:"sizeGzipped,omitempty"`
	Sha1               *string `protobuf:"bytes,4,opt,name=sha1" json:"sha1,omitempty"`
	DownloadUrl        *string `protobuf:"bytes,5,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	DownloadUrlGzipped *string `protobuf:"bytes,6,opt,name=downloadUrlGzipped" json:"downloadUrlGzipped,omitempty"`
	Sha256             *string `protobuf:"bytes,9,opt,name=sha256" json:"sha256,omitempty"`
}

func (x *Split) Reset() {
	*x = Split{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Split) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Split) ProtoMessage() {}

func (x *Split) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Split.ProtoReflect.Descriptor instead.
func (*Split) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{1}
}

func (x *Split) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Split) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *Split) GetSizeGzipped() int64 {
	if x != nil && x.SizeGzipped != nil {
		return *x.SizeGzipped
	}
	return 0
}

func (x *Split) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

func (x *Split) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *Split) GetDownloadUrlGzipped() string {
	if x != nil && x.DownloadUrlGzipped != nil {
		return *x.DownloadUrlGzipped
	}
	return ""
}

func (x *Split) GetSha256() string {
	if x != nil && x.Sha256 != nil {
		return *x.Sha256
	}
	return ""
}

type AppFileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType           *int32  `protobuf:"varint,1,opt,name=fileType" json:"fileType,omitempty"`
	VersionCode        *int32  `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
	Size               *int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	DownloadUrl        *string `protobuf:"bytes,4,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	SizeGzipped        *int64  `protobuf:"varint,6,opt,name=sizeGzipped" json:"sizeGzipped,omitempty"`
	DownloadUrlGzipped *string `protobuf:"bytes,7,opt,name=downloadUrlGzipped" json:"downloadUrlGzipped,omitempty"`
	Sha1               *string `protobuf:"bytes,8,opt,name=sha1" json:"sha1,omitempty"`
}

func (x *AppFileMetadata) Reset() {
	*x = AppFileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFileMetadata) ProtoMessage() {}

func (x *AppFileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFileMetadata.ProtoReflect.Descriptor instead.
func (*AppFileMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{2}
}

func (x *AppFileMetadata) GetFileType() int32 {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return 0
}

func (x *AppFileMetadata) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AppFileMetadata) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *AppFileMetadata) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AppFileMetadata) GetSizeGzipped() int64 {
	if x != nil && x.SizeGzipped != nil {
		return *x.SizeGzipped
	}
	return 0
}

func (x *AppFileMetadata) GetDownloadUrlGzipped() string {
	if x != nil && x.DownloadUrlGzipped != nil {
		return *x.DownloadUrlGzipped
	}
	return ""
}

func (x *AppFileMetadata) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

type EncryptionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       *int32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	EncryptionKey *string `protobuf:"bytes,2,opt,name=encryptionKey" json:"encryptionKey,omitempty"`
	HmacKey       *string `protobuf:"bytes,3,opt,name=hmacKey" json:"hmacKey,omitempty"`
}

func (x *EncryptionParams) Reset() {
	*x = EncryptionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionParams) ProtoMessage() {}

func (x *EncryptionParams) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionParams.ProtoReflect.Descriptor instead.
func (*EncryptionParams) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{3}
}

func (x *EncryptionParams) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *EncryptionParams) GetEncryptionKey() string {
	if x != nil && x.EncryptionKey != nil {
		return *x.EncryptionKey
	}
	return ""
}

func (x *EncryptionParams) GetHmacKey() string {
	if x != nil && x.HmacKey != nil {
		return *x.HmacKey
	}
	return ""
}

type HttpCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *HttpCookie) Reset() {
	*x = HttpCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpCookie) ProtoMessage() {}

func (x *HttpCookie) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpCookie.ProtoReflect.Descriptor instead.
func (*HttpCookie) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{4}
}

func (x *HttpCookie) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HttpCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type BrowseLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     *string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DataUrl                  *string                   `protobuf:"bytes,3,opt,name=dataUrl" json:"dataUrl,omitempty"`
	Icon                     *Image                    `protobuf:"bytes,5,opt,name=icon" json:"icon,omitempty"`
	UnknownCategoryContainer *UnknownCategoryContainer `protobuf:"bytes,4,opt,name=unknownCategoryContainer" json:"unknownCategoryContainer,omitempty"`
}

func (x *BrowseLink) Reset() {
	*x = BrowseLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseLink) ProtoMessage() {}

func (x *BrowseLink) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseLink.ProtoReflect.Descriptor instead.
func (*BrowseLink) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{5}
}

func (x *BrowseLink) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BrowseLink) GetDataUrl() string {
	if x != nil && x.DataUrl != nil {
		return *x.DataUrl
	}
	return ""
}

func (x *BrowseLink) GetIcon() *Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *BrowseLink) GetUnknownCategoryContainer() *UnknownCategoryContainer {
	if x != nil {
		return x.UnknownCategoryContainer
	}
	return nil
}

type UnknownCategoryContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryIdContainer *CategoryIdContainer `protobuf:"bytes,5,opt,name=categoryIdContainer" json:"categoryIdContainer,omitempty"`
}

func (x *UnknownCategoryContainer) Reset() {
	*x = UnknownCategoryContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnknownCategoryContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnknownCategoryContainer) ProtoMessage() {}

func (x *UnknownCategoryContainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnknownCategoryContainer.ProtoReflect.Descriptor instead.
func (*UnknownCategoryContainer) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{6}
}

func (x *UnknownCategoryContainer) GetCategoryIdContainer() *CategoryIdContainer {
	if x != nil {
		return x.CategoryIdContainer
	}
	return nil
}

type CategoryIdContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId *string `protobuf:"bytes,4,opt,name=categoryId" json:"categoryId,omitempty"`
}

func (x *CategoryIdContainer) Reset() {
	*x = CategoryIdContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryIdContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryIdContainer) ProtoMessage() {}

func (x *CategoryIdContainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryIdContainer.ProtoReflect.Descriptor instead.
func (*CategoryIdContainer) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{7}
}

func (x *CategoryIdContainer) GetCategoryId() string {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return ""
}

type BrowseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentsUrl       *string            `protobuf:"bytes,1,opt,name=contentsUrl" json:"contentsUrl,omitempty"`
	PromoUrl          *string            `protobuf:"bytes,2,opt,name=promoUrl" json:"promoUrl,omitempty"`
	Category          []*BrowseLink      `protobuf:"bytes,3,rep,name=category" json:"category,omitempty"`
	Breadcrumb        []*BrowseLink      `protobuf:"bytes,4,rep,name=breadcrumb" json:"breadcrumb,omitempty"`
	CategoryContainer *CategoryContainer `protobuf:"bytes,9,opt,name=categoryContainer" json:"categoryContainer,omitempty"`
}

func (x *BrowseResponse) Reset() {
	*x = BrowseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseResponse) ProtoMessage() {}

func (x *BrowseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseResponse.ProtoReflect.Descriptor instead.
func (*BrowseResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{8}
}

func (x *BrowseResponse) GetContentsUrl() string {
	if x != nil && x.ContentsUrl != nil {
		return *x.ContentsUrl
	}
	return ""
}

func (x *BrowseResponse) GetPromoUrl() string {
	if x != nil && x.PromoUrl != nil {
		return *x.PromoUrl
	}
	return ""
}

func (x *BrowseResponse) GetCategory() []*BrowseLink {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *BrowseResponse) GetBreadcrumb() []*BrowseLink {
	if x != nil {
		return x.Breadcrumb
	}
	return nil
}

func (x *BrowseResponse) GetCategoryContainer() *CategoryContainer {
	if x != nil {
		return x.CategoryContainer
	}
	return nil
}

type CategoryContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*BrowseLink `protobuf:"bytes,4,rep,name=category" json:"category,omitempty"`
}

func (x *CategoryContainer) Reset() {
	*x = CategoryContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryContainer) ProtoMessage() {}

func (x *CategoryContainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryContainer.ProtoReflect.Descriptor instead.
func (*CategoryContainer) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{9}
}

func (x *CategoryContainer) GetCategory() []*BrowseLink {
	if x != nil {
		return x.Category
	}
	return nil
}

type BuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkoutinfo           *BuyResponse_CheckoutInfo `protobuf:"group,2,opt,name=CheckoutInfo,json=checkoutinfo" json:"checkoutinfo,omitempty"`
	ContinueViaUrl         *string                   `protobuf:"bytes,8,opt,name=continueViaUrl" json:"continueViaUrl,omitempty"`
	PurchaseStatusUrl      *string                   `protobuf:"bytes,9,opt,name=purchaseStatusUrl" json:"purchaseStatusUrl,omitempty"`
	CheckoutServiceId      *string                   `protobuf:"bytes,12,opt,name=checkoutServiceId" json:"checkoutServiceId,omitempty"`
	CheckoutTokenRequired  *bool                     `protobuf:"varint,13,opt,name=checkoutTokenRequired" json:"checkoutTokenRequired,omitempty"`
	BaseCheckoutUrl        *string                   `protobuf:"bytes,14,opt,name=baseCheckoutUrl" json:"baseCheckoutUrl,omitempty"`
	TosCheckboxHtml        []string                  `protobuf:"bytes,37,rep,name=tosCheckboxHtml" json:"tosCheckboxHtml,omitempty"`
	IabPermissionError     *int32                    `protobuf:"varint,38,opt,name=iabPermissionError" json:"iabPermissionError,omitempty"`
	PurchaseStatusResponse *PurchaseStatusResponse   `protobuf:"bytes,39,opt,name=purchaseStatusResponse" json:"purchaseStatusResponse,omitempty"`
	PurchaseCookie         *string                   `protobuf:"bytes,46,opt,name=purchaseCookie" json:"purchaseCookie,omitempty"`
	DownloadToken          *string                   `protobuf:"bytes,55,opt,name=downloadToken" json:"downloadToken,omitempty"`
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{10}
}

func (x *BuyResponse) GetCheckoutinfo() *BuyResponse_CheckoutInfo {
	if x != nil {
		return x.Checkoutinfo
	}
	return nil
}

func (x *BuyResponse) GetContinueViaUrl() string {
	if x != nil && x.ContinueViaUrl != nil {
		return *x.ContinueViaUrl
	}
	return ""
}

func (x *BuyResponse) GetPurchaseStatusUrl() string {
	if x != nil && x.PurchaseStatusUrl != nil {
		return *x.PurchaseStatusUrl
	}
	return ""
}

func (x *BuyResponse) GetCheckoutServiceId() string {
	if x != nil && x.CheckoutServiceId != nil {
		return *x.CheckoutServiceId
	}
	return ""
}

func (x *BuyResponse) GetCheckoutTokenRequired() bool {
	if x != nil && x.CheckoutTokenRequired != nil {
		return *x.CheckoutTokenRequired
	}
	return false
}

func (x *BuyResponse) GetBaseCheckoutUrl() string {
	if x != nil && x.BaseCheckoutUrl != nil {
		return *x.BaseCheckoutUrl
	}
	return ""
}

func (x *BuyResponse) GetTosCheckboxHtml() []string {
	if x != nil {
		return x.TosCheckboxHtml
	}
	return nil
}

func (x *BuyResponse) GetIabPermissionError() int32 {
	if x != nil && x.IabPermissionError != nil {
		return *x.IabPermissionError
	}
	return 0
}

func (x *BuyResponse) GetPurchaseStatusResponse() *PurchaseStatusResponse {
	if x != nil {
		return x.PurchaseStatusResponse
	}
	return nil
}

func (x *BuyResponse) GetPurchaseCookie() string {
	if x != nil && x.PurchaseCookie != nil {
		return *x.PurchaseCookie
	}
	return ""
}

func (x *BuyResponse) GetDownloadToken() string {
	if x != nil && x.DownloadToken != nil {
		return *x.DownloadToken
	}
	return ""
}

type LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Offer       *Offer  `protobuf:"bytes,3,opt,name=offer" json:"offer,omitempty"`
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{11}
}

func (x *LineItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LineItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *LineItem) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

type PurchaseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *int32                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	StatusMsg       *string                 `protobuf:"bytes,2,opt,name=statusMsg" json:"statusMsg,omitempty"`
	StatusTitle     *string                 `protobuf:"bytes,3,opt,name=statusTitle" json:"statusTitle,omitempty"`
	InfoUrl         *string                 `protobuf:"bytes,5,opt,name=infoUrl" json:"infoUrl,omitempty"`
	AppDeliveryData *AndroidAppDeliveryData `protobuf:"bytes,8,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
}

func (x *PurchaseStatusResponse) Reset() {
	*x = PurchaseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseStatusResponse) ProtoMessage() {}

func (x *PurchaseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseStatusResponse.ProtoReflect.Descriptor instead.
func (*PurchaseStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{12}
}

func (x *PurchaseStatusResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PurchaseStatusResponse) GetStatusMsg() string {
	if x != nil && x.StatusMsg != nil {
		return *x.StatusMsg
	}
	return ""
}

func (x *PurchaseStatusResponse) GetStatusTitle() string {
	if x != nil && x.StatusTitle != nil {
		return *x.StatusTitle
	}
	return ""
}

func (x *PurchaseStatusResponse) GetInfoUrl() string {
	if x != nil && x.InfoUrl != nil {
		return *x.InfoUrl
	}
	return ""
}

func (x *PurchaseStatusResponse) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

type DeliveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppDeliveryData *AndroidAppDeliveryData `protobuf:"bytes,2,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
}

func (x *DeliveryResponse) Reset() {
	*x = DeliveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryResponse) ProtoMessage() {}

func (x *DeliveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryResponse.ProtoReflect.Descriptor instead.
func (*DeliveryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{13}
}

func (x *DeliveryResponse) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

type Docid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendDocid *string `protobuf:"bytes,1,opt,name=backendDocid" json:"backendDocid,omitempty"`
	Type         *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Backend      *int32  `protobuf:"varint,3,opt,name=backend" json:"backend,omitempty"`
}

func (x *Docid) Reset() {
	*x = Docid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Docid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Docid) ProtoMessage() {}

func (x *Docid) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Docid.ProtoReflect.Descriptor instead.
func (*Docid) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{14}
}

func (x *Docid) GetBackendDocid() string {
	if x != nil && x.BackendDocid != nil {
		return *x.BackendDocid
	}
	return ""
}

func (x *Docid) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Docid) GetBackend() int32 {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return 0
}

type Install struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidId *uint64 `protobuf:"fixed64,1,opt,name=androidId" json:"androidId,omitempty"`
	Version   *int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	Bundled   *bool   `protobuf:"varint,3,opt,name=bundled" json:"bundled,omitempty"`
}

func (x *Install) Reset() {
	*x = Install{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Install) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Install) ProtoMessage() {}

func (x *Install) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Install.ProtoReflect.Descriptor instead.
func (*Install) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{15}
}

func (x *Install) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *Install) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Install) GetBundled() bool {
	if x != nil && x.Bundled != nil {
		return *x.Bundled
	}
	return false
}

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Micros               *int64             `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode         *string            `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount      *string            `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
	ConvertedPrice       []*Offer           `protobuf:"bytes,4,rep,name=convertedPrice" json:"convertedPrice,omitempty"`
	CheckoutFlowRequired *bool              `protobuf:"varint,5,opt,name=checkoutFlowRequired" json:"checkoutFlowRequired,omitempty"`
	FullPriceMicros      *int64             `protobuf:"varint,6,opt,name=fullPriceMicros" json:"fullPriceMicros,omitempty"`
	FormattedFullAmount  *string            `protobuf:"bytes,7,opt,name=formattedFullAmount" json:"formattedFullAmount,omitempty"`
	OfferType            *int32             `protobuf:"varint,8,opt,name=offerType" json:"offerType,omitempty"`
	OnSaleDate           *int64             `protobuf:"varint,10,opt,name=onSaleDate" json:"onSaleDate,omitempty"`
	PromotionLabel       []string           `protobuf:"bytes,11,rep,name=promotionLabel" json:"promotionLabel,omitempty"`
	SubscriptionTerms    *SubscriptionTerms `protobuf:"bytes,12,opt,name=subscriptionTerms" json:"subscriptionTerms,omitempty"`
	FormattedName        *string            `protobuf:"bytes,13,opt,name=formattedName" json:"formattedName,omitempty"`
	FormattedDescription *string            `protobuf:"bytes,14,opt,name=formattedDescription" json:"formattedDescription,omitempty"`
	Sale                 *bool              `protobuf:"varint,22,opt,name=sale" json:"sale,omitempty"`
	Message              *string            `protobuf:"bytes,26,opt,name=message" json:"message,omitempty"`
	SaleEndTimestamp     *int64             `protobuf:"varint,30,opt,name=saleEndTimestamp" json:"saleEndTimestamp,omitempty"`
	SaleMessage          *string            `protobuf:"bytes,31,opt,name=saleMessage" json:"saleMessage,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{16}
}

func (x *Offer) GetMicros() int64 {
	if x != nil && x.Micros != nil {
		return *x.Micros
	}
	return 0
}

func (x *Offer) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Offer) GetFormattedAmount() string {
	if x != nil && x.FormattedAmount != nil {
		return *x.FormattedAmount
	}
	return ""
}

func (x *Offer) GetConvertedPrice() []*Offer {
	if x != nil {
		return x.ConvertedPrice
	}
	return nil
}

func (x *Offer) GetCheckoutFlowRequired() bool {
	if x != nil && x.CheckoutFlowRequired != nil {
		return *x.CheckoutFlowRequired
	}
	return false
}

func (x *Offer) GetFullPriceMicros() int64 {
	if x != nil && x.FullPriceMicros != nil {
		return *x.FullPriceMicros
	}
	return 0
}

func (x *Offer) GetFormattedFullAmount() string {
	if x != nil && x.FormattedFullAmount != nil {
		return *x.FormattedFullAmount
	}
	return ""
}

func (x *Offer) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *Offer) GetOnSaleDate() int64 {
	if x != nil && x.OnSaleDate != nil {
		return *x.OnSaleDate
	}
	return 0
}

func (x *Offer) GetPromotionLabel() []string {
	if x != nil {
		return x.PromotionLabel
	}
	return nil
}

func (x *Offer) GetSubscriptionTerms() *SubscriptionTerms {
	if x != nil {
		return x.SubscriptionTerms
	}
	return nil
}

func (x *Offer) GetFormattedName() string {
	if x != nil && x.FormattedName != nil {
		return *x.FormattedName
	}
	return ""
}

func (x *Offer) GetFormattedDescription() string {
	if x != nil && x.FormattedDescription != nil {
		return *x.FormattedDescription
	}
	return ""
}

func (x *Offer) GetSale() bool {
	if x != nil && x.Sale != nil {
		return *x.Sale
	}
	return false
}

func (x *Offer) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *Offer) GetSaleEndTimestamp() int64 {
	if x != nil && x.SaleEndTimestamp != nil {
		return *x.SaleEndTimestamp
	}
	return 0
}

func (x *Offer) GetSaleMessage() string {
	if x != nil && x.SaleMessage != nil {
		return *x.SaleMessage
	}
	return ""
}

type SubscriptionTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecurringPeriod *TimePeriod `protobuf:"bytes,1,opt,name=recurringPeriod" json:"recurringPeriod,omitempty"`
	TrialPeriod     *TimePeriod `protobuf:"bytes,2,opt,name=trialPeriod" json:"trialPeriod,omitempty"`
}

func (x *SubscriptionTerms) Reset() {
	*x = SubscriptionTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionTerms) ProtoMessage() {}

func (x *SubscriptionTerms) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionTerms.ProtoReflect.Descriptor instead.
func (*SubscriptionTerms) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{17}
}

func (x *SubscriptionTerms) GetRecurringPeriod() *TimePeriod {
	if x != nil {
		return x.RecurringPeriod
	}
	return nil
}

func (x *SubscriptionTerms) GetTrialPeriod() *TimePeriod {
	if x != nil {
		return x.TrialPeriod
	}
	return nil
}

type TimePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit  *int32 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Count *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *TimePeriod) Reset() {
	*x = TimePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimePeriod) ProtoMessage() {}

func (x *TimePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimePeriod.ProtoReflect.Descriptor instead.
func (*TimePeriod) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{18}
}

func (x *TimePeriod) GetUnit() int32 {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return 0
}

func (x *TimePeriod) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type PasswordPrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt            *string `protobuf:"bytes,1,opt,name=prompt" json:"prompt,omitempty"`
	ForgotPasswordUrl *string `protobuf:"bytes,2,opt,name=forgotPasswordUrl" json:"forgotPasswordUrl,omitempty"`
}

func (x *PasswordPrompt) Reset() {
	*x = PasswordPrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordPrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordPrompt) ProtoMessage() {}

func (x *PasswordPrompt) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordPrompt.ProtoReflect.Descriptor instead.
func (*PasswordPrompt) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{19}
}

func (x *PasswordPrompt) GetPrompt() string {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return ""
}

func (x *PasswordPrompt) GetForgotPasswordUrl() string {
	if x != nil && x.ForgotPasswordUrl != nil {
		return *x.ForgotPasswordUrl
	}
	return ""
}

type ContainerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowseUrl        *string  `protobuf:"bytes,1,opt,name=browseUrl" json:"browseUrl,omitempty"`
	NextPageUrl      *string  `protobuf:"bytes,2,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
	Relevance        *float64 `protobuf:"fixed64,3,opt,name=relevance" json:"relevance,omitempty"`
	EstimatedResults *int64   `protobuf:"varint,4,opt,name=estimatedResults" json:"estimatedResults,omitempty"`
	AnalyticsCookie  *string  `protobuf:"bytes,5,opt,name=analyticsCookie" json:"analyticsCookie,omitempty"`
	Ordered          *bool    `protobuf:"varint,6,opt,name=ordered" json:"ordered,omitempty"`
}

func (x *ContainerMetadata) Reset() {
	*x = ContainerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetadata) ProtoMessage() {}

func (x *ContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetadata.ProtoReflect.Descriptor instead.
func (*ContainerMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{20}
}

func (x *ContainerMetadata) GetBrowseUrl() string {
	if x != nil && x.BrowseUrl != nil {
		return *x.BrowseUrl
	}
	return ""
}

func (x *ContainerMetadata) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

func (x *ContainerMetadata) GetRelevance() float64 {
	if x != nil && x.Relevance != nil {
		return *x.Relevance
	}
	return 0
}

func (x *ContainerMetadata) GetEstimatedResults() int64 {
	if x != nil && x.EstimatedResults != nil {
		return *x.EstimatedResults
	}
	return 0
}

func (x *ContainerMetadata) GetAnalyticsCookie() string {
	if x != nil && x.AnalyticsCookie != nil {
		return *x.AnalyticsCookie
	}
	return ""
}

func (x *ContainerMetadata) GetOrdered() bool {
	if x != nil && x.Ordered != nil {
		return *x.Ordered
	}
	return false
}

type DebugInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []string            `protobuf:"bytes,1,rep,name=message" json:"message,omitempty"`
	Timing  []*DebugInfo_Timing `protobuf:"group,2,rep,name=Timing,json=timing" json:"timing,omitempty"`
}

func (x *DebugInfo) Reset() {
	*x = DebugInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo) ProtoMessage() {}

func (x *DebugInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfo.ProtoReflect.Descriptor instead.
func (*DebugInfo) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{21}
}

func (x *DebugInfo) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DebugInfo) GetTiming() []*DebugInfo_Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

type BulkDetailsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc *DocV2 `protobuf:"bytes,1,opt,name=doc" json:"doc,omitempty"`
}

func (x *BulkDetailsEntry) Reset() {
	*x = BulkDetailsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsEntry) ProtoMessage() {}

func (x *BulkDetailsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsEntry.ProtoReflect.Descriptor instead.
func (*BulkDetailsEntry) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{22}
}

func (x *BulkDetailsEntry) GetDoc() *DocV2 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type BulkDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid            []string `protobuf:"bytes,1,rep,name=docid" json:"docid,omitempty"`
	IncludeChildDocs *bool    `protobuf:"varint,2,opt,name=includeChildDocs" json:"includeChildDocs,omitempty"`
}

func (x *BulkDetailsRequest) Reset() {
	*x = BulkDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsRequest) ProtoMessage() {}

func (x *BulkDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsRequest.ProtoReflect.Descriptor instead.
func (*BulkDetailsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{23}
}

func (x *BulkDetailsRequest) GetDocid() []string {
	if x != nil {
		return x.Docid
	}
	return nil
}

func (x *BulkDetailsRequest) GetIncludeChildDocs() bool {
	if x != nil && x.IncludeChildDocs != nil {
		return *x.IncludeChildDocs
	}
	return false
}

type BulkDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*BulkDetailsEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (x *BulkDetailsResponse) Reset() {
	*x = BulkDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsResponse) ProtoMessage() {}

func (x *BulkDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsResponse.ProtoReflect.Descriptor instead.
func (*BulkDetailsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{24}
}

func (x *BulkDetailsResponse) GetEntry() []*BulkDetailsEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type DetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocV1                       *DocV1  `protobuf:"bytes,1,opt,name=docV1" json:"docV1,omitempty"`
	DocV2                       *DocV2  `protobuf:"bytes,4,opt,name=docV2" json:"docV2,omitempty"`
	DetailsStreamUrl            *string `protobuf:"bytes,13,opt,name=detailsStreamUrl" json:"detailsStreamUrl,omitempty"`
	PostAcquireDetailsStreamUrl *string `protobuf:"bytes,17,opt,name=postAcquireDetailsStreamUrl" json:"postAcquireDetailsStreamUrl,omitempty"`
}

func (x *DetailsResponse) Reset() {
	*x = DetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsResponse) ProtoMessage() {}

func (x *DetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsResponse.ProtoReflect.Descriptor instead.
func (*DetailsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{25}
}

func (x *DetailsResponse) GetDocV1() *DocV1 {
	if x != nil {
		return x.DocV1
	}
	return nil
}

func (x *DetailsResponse) GetDocV2() *DocV2 {
	if x != nil {
		return x.DocV2
	}
	return nil
}

func (x *DetailsResponse) GetDetailsStreamUrl() string {
	if x != nil && x.DetailsStreamUrl != nil {
		return *x.DetailsStreamUrl
	}
	return ""
}

func (x *DetailsResponse) GetPostAcquireDetailsStreamUrl() string {
	if x != nil && x.PostAcquireDetailsStreamUrl != nil {
		return *x.PostAcquireDetailsStreamUrl
	}
	return ""
}

type DeviceConfigurationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TouchScreen            *int32   `protobuf:"varint,1,opt,name=touchScreen" json:"touchScreen,omitempty"`
	Keyboard               *int32   `protobuf:"varint,2,opt,name=keyboard" json:"keyboard,omitempty"`
	Navigation             *int32   `protobuf:"varint,3,opt,name=navigation" json:"navigation,omitempty"`
	ScreenLayout           *int32   `protobuf:"varint,4,opt,name=screenLayout" json:"screenLayout,omitempty"`
	HasHardKeyboard        *bool    `protobuf:"varint,5,opt,name=hasHardKeyboard" json:"hasHardKeyboard,omitempty"`
	HasFiveWayNavigation   *bool    `protobuf:"varint,6,opt,name=hasFiveWayNavigation" json:"hasFiveWayNavigation,omitempty"`
	ScreenDensity          *int32   `protobuf:"varint,7,opt,name=screenDensity" json:"screenDensity,omitempty"`
	GlEsVersion            *int32   `protobuf:"varint,8,opt,name=glEsVersion" json:"glEsVersion,omitempty"`
	SystemSharedLibrary    []string `protobuf:"bytes,9,rep,name=systemSharedLibrary" json:"systemSharedLibrary,omitempty"`
	SystemAvailableFeature []string `protobuf:"bytes,10,rep,name=systemAvailableFeature" json:"systemAvailableFeature,omitempty"`
	NativePlatform         []string `protobuf:"bytes,11,rep,name=nativePlatform" json:"nativePlatform,omitempty"`
	ScreenWidth            *int32   `protobuf:"varint,12,opt,name=screenWidth" json:"screenWidth,omitempty"`
	ScreenHeight           *int32   `protobuf:"varint,13,opt,name=screenHeight" json:"screenHeight,omitempty"`
	SystemSupportedLocale  []string `protobuf:"bytes,14,rep,name=systemSupportedLocale" json:"systemSupportedLocale,omitempty"`
	GlExtension            []string `protobuf:"bytes,15,rep,name=glExtension" json:"glExtension,omitempty"`
	DeviceClass            *int32   `protobuf:"varint,16,opt,name=deviceClass" json:"deviceClass,omitempty"`
	MaxApkDownloadSizeMb   *int32   `protobuf:"varint,17,opt,name=maxApkDownloadSizeMb" json:"maxApkDownloadSizeMb,omitempty"`
}

func (x *DeviceConfigurationProto) Reset() {
	*x = DeviceConfigurationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConfigurationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConfigurationProto) ProtoMessage() {}

func (x *DeviceConfigurationProto) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConfigurationProto.ProtoReflect.Descriptor instead.
func (*DeviceConfigurationProto) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{26}
}

func (x *DeviceConfigurationProto) GetTouchScreen() int32 {
	if x != nil && x.TouchScreen != nil {
		return *x.TouchScreen
	}
	return 0
}

func (x *DeviceConfigurationProto) GetKeyboard() int32 {
	if x != nil && x.Keyboard != nil {
		return *x.Keyboard
	}
	return 0
}

func (x *DeviceConfigurationProto) GetNavigation() int32 {
	if x != nil && x.Navigation != nil {
		return *x.Navigation
	}
	return 0
}

func (x *DeviceConfigurationProto) GetScreenLayout() int32 {
	if x != nil && x.ScreenLayout != nil {
		return *x.ScreenLayout
	}
	return 0
}

func (x *DeviceConfigurationProto) GetHasHardKeyboard() bool {
	if x != nil && x.HasHardKeyboard != nil {
		return *x.HasHardKeyboard
	}
	return false
}

func (x *DeviceConfigurationProto) GetHasFiveWayNavigation() bool {
	if x != nil && x.HasFiveWayNavigation != nil {
		return *x.HasFiveWayNavigation
	}
	return false
}

func (x *DeviceConfigurationProto) GetScreenDensity() int32 {
	if x != nil && x.ScreenDensity != nil {
		return *x.ScreenDensity
	}
	return 0
}

func (x *DeviceConfigurationProto) GetGlEsVersion() int32 {
	if x != nil && x.GlEsVersion != nil {
		return *x.GlEsVersion
	}
	return 0
}

func (x *DeviceConfigurationProto) GetSystemSharedLibrary() []string {
	if x != nil {
		return x.SystemSharedLibrary
	}
	return nil
}

func (x *DeviceConfigurationProto) GetSystemAvailableFeature() []string {
	if x != nil {
		return x.SystemAvailableFeature
	}
	return nil
}

func (x *DeviceConfigurationProto) GetNativePlatform() []string {
	if x != nil {
		return x.NativePlatform
	}
	return nil
}

func (x *DeviceConfigurationProto) GetScreenWidth() int32 {
	if x != nil && x.ScreenWidth != nil {
		return *x.ScreenWidth
	}
	return 0
}

func (x *DeviceConfigurationProto) GetScreenHeight() int32 {
	if x != nil && x.ScreenHeight != nil {
		return *x.ScreenHeight
	}
	return 0
}

func (x *DeviceConfigurationProto) GetSystemSupportedLocale() []string {
	if x != nil {
		return x.SystemSupportedLocale
	}
	return nil
}

func (x *DeviceConfigurationProto) GetGlExtension() []string {
	if x != nil {
		return x.GlExtension
	}
	return nil
}

func (x *DeviceConfigurationProto) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

func (x *DeviceConfigurationProto) GetMaxApkDownloadSizeMb() int32 {
	if x != nil && x.MaxApkDownloadSizeMb != nil {
		return *x.MaxApkDownloadSizeMb
	}
	return 0
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid             *Docid             `protobuf:"bytes,1,opt,name=docid" json:"docid,omitempty"`
	FetchDocid        *Docid             `protobuf:"bytes,2,opt,name=fetchDocid" json:"fetchDocid,omitempty"`
	SampleDocid       *Docid             `protobuf:"bytes,3,opt,name=sampleDocid" json:"sampleDocid,omitempty"`
	Title             *string            `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Url               *string            `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	Snippet           []string           `protobuf:"bytes,6,rep,name=snippet" json:"snippet,omitempty"`
	PriceDeprecated   *Offer             `protobuf:"bytes,7,opt,name=priceDeprecated" json:"priceDeprecated,omitempty"`
	Availability      *Availability      `protobuf:"bytes,9,opt,name=availability" json:"availability,omitempty"`
	Image             []*Image           `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	Child             []*Document        `protobuf:"bytes,11,rep,name=child" json:"child,omitempty"`
	AggregateRating   *AggregateRating   `protobuf:"bytes,13,opt,name=aggregateRating" json:"aggregateRating,omitempty"`
	Offer             []*Offer           `protobuf:"bytes,14,rep,name=offer" json:"offer,omitempty"`
	TranslatedSnippet []*TranslatedText  `protobuf:"bytes,15,rep,name=translatedSnippet" json:"translatedSnippet,omitempty"`
	DocumentVariant   []*DocumentVariant `protobuf:"bytes,16,rep,name=documentVariant" json:"documentVariant,omitempty"`
	CategoryId        []string           `protobuf:"bytes,17,rep,name=categoryId" json:"categoryId,omitempty"`
	Decoration        []*Document        `protobuf:"bytes,18,rep,name=decoration" json:"decoration,omitempty"`
	Parent            []*Document        `protobuf:"bytes,19,rep,name=parent" json:"parent,omitempty"`
	PrivacyPolicyUrl  *string            `protobuf:"bytes,20,opt,name=privacyPolicyUrl" json:"privacyPolicyUrl,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{27}
}

func (x *Document) GetDocid() *Docid {
	if x != nil {
		return x.Docid
	}
	return nil
}

func (x *Document) GetFetchDocid() *Docid {
	if x != nil {
		return x.FetchDocid
	}
	return nil
}

func (x *Document) GetSampleDocid() *Docid {
	if x != nil {
		return x.SampleDocid
	}
	return nil
}

func (x *Document) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Document) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Document) GetSnippet() []string {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *Document) GetPriceDeprecated() *Offer {
	if x != nil {
		return x.PriceDeprecated
	}
	return nil
}

func (x *Document) GetAvailability() *Availability {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *Document) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Document) GetChild() []*Document {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *Document) GetAggregateRating() *AggregateRating {
	if x != nil {
		return x.AggregateRating
	}
	return nil
}

func (x *Document) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *Document) GetTranslatedSnippet() []*TranslatedText {
	if x != nil {
		return x.TranslatedSnippet
	}
	return nil
}

func (x *Document) GetDocumentVariant() []*DocumentVariant {
	if x != nil {
		return x.DocumentVariant
	}
	return nil
}

func (x *Document) GetCategoryId() []string {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *Document) GetDecoration() []*Document {
	if x != nil {
		return x.Decoration
	}
	return nil
}

func (x *Document) GetParent() []*Document {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Document) GetPrivacyPolicyUrl() string {
	if x != nil && x.PrivacyPolicyUrl != nil {
		return *x.PrivacyPolicyUrl
	}
	return ""
}

type DocumentVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VariationType   *int32            `protobuf:"varint,1,opt,name=variationType" json:"variationType,omitempty"`
	Rule            *Rule             `protobuf:"bytes,2,opt,name=rule" json:"rule,omitempty"`
	Title           *string           `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Snippet         []string          `protobuf:"bytes,4,rep,name=snippet" json:"snippet,omitempty"`
	RecentChanges   *string           `protobuf:"bytes,5,opt,name=recentChanges" json:"recentChanges,omitempty"`
	AutoTranslation []*TranslatedText `protobuf:"bytes,6,rep,name=autoTranslation" json:"autoTranslation,omitempty"`
	Offer           []*Offer          `protobuf:"bytes,7,rep,name=offer" json:"offer,omitempty"`
	ChannelId       *int64            `protobuf:"varint,9,opt,name=channelId" json:"channelId,omitempty"`
	Child           []*Document       `protobuf:"bytes,10,rep,name=child" json:"child,omitempty"`
	Decoration      []*Document       `protobuf:"bytes,11,rep,name=decoration" json:"decoration,omitempty"`
}

func (x *DocumentVariant) Reset() {
	*x = DocumentVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentVariant) ProtoMessage() {}

func (x *DocumentVariant) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentVariant.ProtoReflect.Descriptor instead.
func (*DocumentVariant) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{28}
}

func (x *DocumentVariant) GetVariationType() int32 {
	if x != nil && x.VariationType != nil {
		return *x.VariationType
	}
	return 0
}

func (x *DocumentVariant) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *DocumentVariant) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocumentVariant) GetSnippet() []string {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *DocumentVariant) GetRecentChanges() string {
	if x != nil && x.RecentChanges != nil {
		return *x.RecentChanges
	}
	return ""
}

func (x *DocumentVariant) GetAutoTranslation() []*TranslatedText {
	if x != nil {
		return x.AutoTranslation
	}
	return nil
}

func (x *DocumentVariant) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *DocumentVariant) GetChannelId() int64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *DocumentVariant) GetChild() []*Document {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *DocumentVariant) GetDecoration() []*Document {
	if x != nil {
		return x.Decoration
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageType              *int32           `protobuf:"varint,1,opt,name=imageType" json:"imageType,omitempty"`
	Dimension              *Image_Dimension `protobuf:"group,2,opt,name=Dimension,json=dimension" json:"dimension,omitempty"`
	ImageUrl               *string          `protobuf:"bytes,5,opt,name=imageUrl" json:"imageUrl,omitempty"`
	AltTextLocalized       *string          `protobuf:"bytes,6,opt,name=altTextLocalized" json:"altTextLocalized,omitempty"`
	SecureUrl              *string          `protobuf:"bytes,7,opt,name=secureUrl" json:"secureUrl,omitempty"`
	PositionInSequence     *int32           `protobuf:"varint,8,opt,name=positionInSequence" json:"positionInSequence,omitempty"`
	SupportsFifeUrlOptions *bool            `protobuf:"varint,9,opt,name=supportsFifeUrlOptions" json:"supportsFifeUrlOptions,omitempty"`
	Citation               *Image_Citation  `protobuf:"group,10,opt,name=Citation,json=citation" json:"citation,omitempty"`
	Color                  *string          `protobuf:"bytes,15,opt,name=color" json:"color,omitempty"`
	ScreenshotSetNumber    *int32           `protobuf:"varint,21,opt,name=screenshotSetNumber" json:"screenshotSetNumber,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{29}
}

func (x *Image) GetImageType() int32 {
	if x != nil && x.ImageType != nil {
		return *x.ImageType
	}
	return 0
}

func (x *Image) GetDimension() *Image_Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Image) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Image) GetAltTextLocalized() string {
	if x != nil && x.AltTextLocalized != nil {
		return *x.AltTextLocalized
	}
	return ""
}

func (x *Image) GetSecureUrl() string {
	if x != nil && x.SecureUrl != nil {
		return *x.SecureUrl
	}
	return ""
}

func (x *Image) GetPositionInSequence() int32 {
	if x != nil && x.PositionInSequence != nil {
		return *x.PositionInSequence
	}
	return 0
}

func (x *Image) GetSupportsFifeUrlOptions() bool {
	if x != nil && x.SupportsFifeUrlOptions != nil {
		return *x.SupportsFifeUrlOptions
	}
	return false
}

func (x *Image) GetCitation() *Image_Citation {
	if x != nil {
		return x.Citation
	}
	return nil
}

func (x *Image) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *Image) GetScreenshotSetNumber() int32 {
	if x != nil && x.ScreenshotSetNumber != nil {
		return *x.ScreenshotSetNumber
	}
	return 0
}

type TranslatedText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	SourceLocale *string `protobuf:"bytes,2,opt,name=sourceLocale" json:"sourceLocale,omitempty"`
	TargetLocale *string `protobuf:"bytes,3,opt,name=targetLocale" json:"targetLocale,omitempty"`
}

func (x *TranslatedText) Reset() {
	*x = TranslatedText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslatedText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslatedText) ProtoMessage() {}

func (x *TranslatedText) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslatedText.ProtoReflect.Descriptor instead.
func (*TranslatedText) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{30}
}

func (x *TranslatedText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *TranslatedText) GetSourceLocale() string {
	if x != nil && x.SourceLocale != nil {
		return *x.SourceLocale
	}
	return ""
}

func (x *TranslatedText) GetTargetLocale() string {
	if x != nil && x.TargetLocale != nil {
		return *x.TargetLocale
	}
	return ""
}

type AppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperName      *string             `protobuf:"bytes,1,opt,name=developerName" json:"developerName,omitempty"`
	MajorVersionNumber *int32              `protobuf:"varint,2,opt,name=majorVersionNumber" json:"majorVersionNumber,omitempty"`
	VersionCode        *int32              `protobuf:"varint,3,opt,name=versionCode" json:"versionCode,omitempty"`
	VersionString      *string             `protobuf:"bytes,4,opt,name=versionString" json:"versionString,omitempty"`
	Title              *string             `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	InstallationSize   *int64              `protobuf:"varint,9,opt,name=installationSize" json:"installationSize,omitempty"`
	DeveloperWebsite   *string             `protobuf:"bytes,12,opt,name=developerWebsite" json:"developerWebsite,omitempty"`
	NumDownloads       *string             `protobuf:"bytes,13,opt,name=numDownloads" json:"numDownloads,omitempty"`
	PackageName        *string             `protobuf:"bytes,14,opt,name=packageName" json:"packageName,omitempty"`
	RecentChangesHtml  *string             `protobuf:"bytes,15,opt,name=recentChangesHtml" json:"recentChangesHtml,omitempty"`
	UploadDate         *string             `protobuf:"bytes,16,opt,name=uploadDate" json:"uploadDate,omitempty"`
	File               []*FileMetadata     `protobuf:"bytes,17,rep,name=file" json:"file,omitempty"`
	Unstable           *bool               `protobuf:"varint,21,opt,name=unstable" json:"unstable,omitempty"`
	HasInstantLink     *bool               `protobuf:"varint,24,opt,name=hasInstantLink" json:"hasInstantLink,omitempty"`
	ContainsAds        *string             `protobuf:"bytes,30,opt,name=containsAds" json:"containsAds,omitempty"`
	TestingProgramInfo *TestingProgramInfo `protobuf:"bytes,35,opt,name=testingProgramInfo" json:"testingProgramInfo,omitempty"`
	EarlyAccessInfo    *EarlyAccessInfo    `protobuf:"bytes,36,opt,name=earlyAccessInfo" json:"earlyAccessInfo,omitempty"`
	InstantLink        *string             `protobuf:"bytes,43,opt,name=instantLink" json:"instantLink,omitempty"`
	DeveloperAddress   *string             `protobuf:"bytes,45,opt,name=developerAddress" json:"developerAddress,omitempty"`
}

func (x *AppDetails) Reset() {
	*x = AppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDetails) ProtoMessage() {}

func (x *AppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDetails.ProtoReflect.Descriptor instead.
func (*AppDetails) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{31}
}

func (x *AppDetails) GetDeveloperName() string {
	if x != nil && x.DeveloperName != nil {
		return *x.DeveloperName
	}
	return ""
}

func (x *AppDetails) GetMajorVersionNumber() int32 {
	if x != nil && x.MajorVersionNumber != nil {
		return *x.MajorVersionNumber
	}
	return 0
}

func (x *AppDetails) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AppDetails) GetVersionString() string {
	if x != nil && x.VersionString != nil {
		return *x.VersionString
	}
	return ""
}

func (x *AppDetails) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AppDetails) GetInstallationSize() int64 {
	if x != nil && x.InstallationSize != nil {
		return *x.InstallationSize
	}
	return 0
}

func (x *AppDetails) GetDeveloperWebsite() string {
	if x != nil && x.DeveloperWebsite != nil {
		return *x.DeveloperWebsite
	}
	return ""
}

func (x *AppDetails) GetNumDownloads() string {
	if x != nil && x.NumDownloads != nil {
		return *x.NumDownloads
	}
	return ""
}

func (x *AppDetails) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *AppDetails) GetRecentChangesHtml() string {
	if x != nil && x.RecentChangesHtml != nil {
		return *x.RecentChangesHtml
	}
	return ""
}

func (x *AppDetails) GetUploadDate() string {
	if x != nil && x.UploadDate != nil {
		return *x.UploadDate
	}
	return ""
}

func (x *AppDetails) GetFile() []*FileMetadata {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *AppDetails) GetUnstable() bool {
	if x != nil && x.Unstable != nil {
		return *x.Unstable
	}
	return false
}

func (x *AppDetails) GetHasInstantLink() bool {
	if x != nil && x.HasInstantLink != nil {
		return *x.HasInstantLink
	}
	return false
}

func (x *AppDetails) GetContainsAds() string {
	if x != nil && x.ContainsAds != nil {
		return *x.ContainsAds
	}
	return ""
}

func (x *AppDetails) GetTestingProgramInfo() *TestingProgramInfo {
	if x != nil {
		return x.TestingProgramInfo
	}
	return nil
}

func (x *AppDetails) GetEarlyAccessInfo() *EarlyAccessInfo {
	if x != nil {
		return x.EarlyAccessInfo
	}
	return nil
}

func (x *AppDetails) GetInstantLink() string {
	if x != nil && x.InstantLink != nil {
		return *x.InstantLink
	}
	return ""
}

func (x *AppDetails) GetDeveloperAddress() string {
	if x != nil && x.DeveloperAddress != nil {
		return *x.DeveloperAddress
	}
	return ""
}

type TestingProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribed          *bool   `protobuf:"varint,2,opt,name=subscribed" json:"subscribed,omitempty"`
	Subscribed1         *bool   `protobuf:"varint,3,opt,name=subscribed1" json:"subscribed1,omitempty"`
	TestingProgramEmail *string `protobuf:"bytes,5,opt,name=testingProgramEmail" json:"testingProgramEmail,omitempty"`
}

func (x *TestingProgramInfo) Reset() {
	*x = TestingProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramInfo) ProtoMessage() {}

func (x *TestingProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramInfo.ProtoReflect.Descriptor instead.
func (*TestingProgramInfo) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{32}
}

func (x *TestingProgramInfo) GetSubscribed() bool {
	if x != nil && x.Subscribed != nil {
		return *x.Subscribed
	}
	return false
}

func (x *TestingProgramInfo) GetSubscribed1() bool {
	if x != nil && x.Subscribed1 != nil {
		return *x.Subscribed1
	}
	return false
}

func (x *TestingProgramInfo) GetTestingProgramEmail() string {
	if x != nil && x.TestingProgramEmail != nil {
		return *x.TestingProgramEmail
	}
	return ""
}

type EarlyAccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (x *EarlyAccessInfo) Reset() {
	*x = EarlyAccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarlyAccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarlyAccessInfo) ProtoMessage() {}

func (x *EarlyAccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarlyAccessInfo.ProtoReflect.Descriptor instead.
func (*EarlyAccessInfo) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{33}
}

func (x *EarlyAccessInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type DocumentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppDetails *AppDetails `protobuf:"bytes,1,opt,name=appDetails" json:"appDetails,omitempty"`
}

func (x *DocumentDetails) Reset() {
	*x = DocumentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDetails) ProtoMessage() {}

func (x *DocumentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDetails.ProtoReflect.Descriptor instead.
func (*DocumentDetails) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{34}
}

func (x *DocumentDetails) GetAppDetails() *AppDetails {
	if x != nil {
		return x.AppDetails
	}
	return nil
}

type FileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType    *int32 `protobuf:"varint,1,opt,name=fileType" json:"fileType,omitempty"`
	VersionCode *int32 `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
	Size        *int64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{35}
}

func (x *FileMetadata) GetFileType() int32 {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return 0
}

func (x *FileMetadata) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc []*DocV2 `protobuf:"bytes,2,rep,name=doc" json:"doc,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{36}
}

func (x *ListResponse) GetDoc() []*DocV2 {
	if x != nil {
		return x.Doc
	}
	return nil
}

type DocV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinskyDoc        *Document        `protobuf:"bytes,1,opt,name=finskyDoc" json:"finskyDoc,omitempty"`
	Docid            *string          `protobuf:"bytes,2,opt,name=docid" json:"docid,omitempty"`
	DetailsUrl       *string          `protobuf:"bytes,3,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	ReviewsUrl       *string          `protobuf:"bytes,4,opt,name=reviewsUrl" json:"reviewsUrl,omitempty"`
	RelatedListUrl   *string          `protobuf:"bytes,5,opt,name=relatedListUrl" json:"relatedListUrl,omitempty"`
	MoreByListUrl    *string          `protobuf:"bytes,6,opt,name=moreByListUrl" json:"moreByListUrl,omitempty"`
	ShareUrl         *string          `protobuf:"bytes,7,opt,name=shareUrl" json:"shareUrl,omitempty"`
	Creator          *string          `protobuf:"bytes,8,opt,name=creator" json:"creator,omitempty"`
	Details          *DocumentDetails `protobuf:"bytes,9,opt,name=details" json:"details,omitempty"`
	DescriptionHtml  *string          `protobuf:"bytes,10,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	RelatedBrowseUrl *string          `protobuf:"bytes,11,opt,name=relatedBrowseUrl" json:"relatedBrowseUrl,omitempty"`
	MoreByBrowseUrl  *string          `protobuf:"bytes,12,opt,name=moreByBrowseUrl" json:"moreByBrowseUrl,omitempty"`
	RelatedHeader    *string          `protobuf:"bytes,13,opt,name=relatedHeader" json:"relatedHeader,omitempty"`
	MoreByHeader     *string          `protobuf:"bytes,14,opt,name=moreByHeader" json:"moreByHeader,omitempty"`
	Title            *string          `protobuf:"bytes,15,opt,name=title" json:"title,omitempty"`
	WarningMessage   *string          `protobuf:"bytes,17,opt,name=warningMessage" json:"warningMessage,omitempty"`
}

func (x *DocV1) Reset() {
	*x = DocV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocV1) ProtoMessage() {}

func (x *DocV1) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocV1.ProtoReflect.Descriptor instead.
func (*DocV1) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{37}
}

func (x *DocV1) GetFinskyDoc() *Document {
	if x != nil {
		return x.FinskyDoc
	}
	return nil
}

func (x *DocV1) GetDocid() string {
	if x != nil && x.Docid != nil {
		return *x.Docid
	}
	return ""
}

func (x *DocV1) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *DocV1) GetReviewsUrl() string {
	if x != nil && x.ReviewsUrl != nil {
		return *x.ReviewsUrl
	}
	return ""
}

func (x *DocV1) GetRelatedListUrl() string {
	if x != nil && x.RelatedListUrl != nil {
		return *x.RelatedListUrl
	}
	return ""
}

func (x *DocV1) GetMoreByListUrl() string {
	if x != nil && x.MoreByListUrl != nil {
		return *x.MoreByListUrl
	}
	return ""
}

func (x *DocV1) GetShareUrl() string {
	if x != nil && x.ShareUrl != nil {
		return *x.ShareUrl
	}
	return ""
}

func (x *DocV1) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *DocV1) GetDetails() *DocumentDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DocV1) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *DocV1) GetRelatedBrowseUrl() string {
	if x != nil && x.RelatedBrowseUrl != nil {
		return *x.RelatedBrowseUrl
	}
	return ""
}

func (x *DocV1) GetMoreByBrowseUrl() string {
	if x != nil && x.MoreByBrowseUrl != nil {
		return *x.MoreByBrowseUrl
	}
	return ""
}

func (x *DocV1) GetRelatedHeader() string {
	if x != nil && x.RelatedHeader != nil {
		return *x.RelatedHeader
	}
	return ""
}

func (x *DocV1) GetMoreByHeader() string {
	if x != nil && x.MoreByHeader != nil {
		return *x.MoreByHeader
	}
	return ""
}

func (x *DocV1) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocV1) GetWarningMessage() string {
	if x != nil && x.WarningMessage != nil {
		return *x.WarningMessage
	}
	return ""
}

type DocV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docid              *string            `protobuf:"bytes,1,opt,name=docid" json:"docid,omitempty"`
	BackendDocid       *string            `protobuf:"bytes,2,opt,name=backendDocid" json:"backendDocid,omitempty"`
	DocType            *int32             `protobuf:"varint,3,opt,name=docType" json:"docType,omitempty"`
	BackendId          *int32             `protobuf:"varint,4,opt,name=backendId" json:"backendId,omitempty"`
	Title              *string            `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Creator            *string            `protobuf:"bytes,6,opt,name=creator" json:"creator,omitempty"`
	DescriptionHtml    *string            `protobuf:"bytes,7,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	Offer              []*Offer           `protobuf:"bytes,8,rep,name=offer" json:"offer,omitempty"`
	Availability       *Availability      `protobuf:"bytes,9,opt,name=availability" json:"availability,omitempty"`
	Image              []*Image           `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	Child              []*DocV2           `protobuf:"bytes,11,rep,name=child" json:"child,omitempty"`
	ContainerMetadata  *ContainerMetadata `protobuf:"bytes,12,opt,name=containerMetadata" json:"containerMetadata,omitempty"`
	Details            *DocumentDetails   `protobuf:"bytes,13,opt,name=details" json:"details,omitempty"`
	DetailsUrl         *string            `protobuf:"bytes,16,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	ShareUrl           *string            `protobuf:"bytes,17,opt,name=shareUrl" json:"shareUrl,omitempty"`
	ReviewsUrl         *string            `protobuf:"bytes,18,opt,name=reviewsUrl" json:"reviewsUrl,omitempty"`
	BackendUrl         *string            `protobuf:"bytes,19,opt,name=backendUrl" json:"backendUrl,omitempty"`
	PurchaseDetailsUrl *string            `protobuf:"bytes,20,opt,name=purchaseDetailsUrl" json:"purchaseDetailsUrl,omitempty"`
	DetailsReusable    *bool              `protobuf:"varint,21,opt,name=detailsReusable" json:"detailsReusable,omitempty"`
	Subtitle           *string            `protobuf:"bytes,22,opt,name=subtitle" json:"subtitle,omitempty"`
	DescriptionShort   *string            `protobuf:"bytes,27,opt,name=descriptionShort" json:"descriptionShort,omitempty"`
	ReviewSnippetsUrl  *string            `protobuf:"bytes,31,opt,name=reviewSnippetsUrl" json:"reviewSnippetsUrl,omitempty"`
	ReviewQuestionsUrl *string            `protobuf:"bytes,34,opt,name=reviewQuestionsUrl" json:"reviewQuestionsUrl,omitempty"`
}

func (x *DocV2) Reset() {
	*x = DocV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocV2) ProtoMessage() {}

func (x *DocV2) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocV2.ProtoReflect.Descriptor instead.
func (*DocV2) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{38}
}

func (x *DocV2) GetDocid() string {
	if x != nil && x.Docid != nil {
		return *x.Docid
	}
	return ""
}

func (x *DocV2) GetBackendDocid() string {
	if x != nil && x.BackendDocid != nil {
		return *x.BackendDocid
	}
	return ""
}

func (x *DocV2) GetDocType() int32 {
	if x != nil && x.DocType != nil {
		return *x.DocType
	}
	return 0
}

func (x *DocV2) GetBackendId() int32 {
	if x != nil && x.BackendId != nil {
		return *x.BackendId
	}
	return 0
}

func (x *DocV2) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocV2) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *DocV2) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *DocV2) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *DocV2) GetAvailability() *Availability {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *DocV2) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *DocV2) GetChild() []*DocV2 {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *DocV2) GetContainerMetadata() *ContainerMetadata {
	if x != nil {
		return x.ContainerMetadata
	}
	return nil
}

func (x *DocV2) GetDetails() *DocumentDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *DocV2) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *DocV2) GetShareUrl() string {
	if x != nil && x.ShareUrl != nil {
		return *x.ShareUrl
	}
	return ""
}

func (x *DocV2) GetReviewsUrl() string {
	if x != nil && x.ReviewsUrl != nil {
		return *x.ReviewsUrl
	}
	return ""
}

func (x *DocV2) GetBackendUrl() string {
	if x != nil && x.BackendUrl != nil {
		return *x.BackendUrl
	}
	return ""
}

func (x *DocV2) GetPurchaseDetailsUrl() string {
	if x != nil && x.PurchaseDetailsUrl != nil {
		return *x.PurchaseDetailsUrl
	}
	return ""
}

func (x *DocV2) GetDetailsReusable() bool {
	if x != nil && x.DetailsReusable != nil {
		return *x.DetailsReusable
	}
	return false
}

func (x *DocV2) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

func (x *DocV2) GetDescriptionShort() string {
	if x != nil && x.DescriptionShort != nil {
		return *x.DescriptionShort
	}
	return ""
}

func (x *DocV2) GetReviewSnippetsUrl() string {
	if x != nil && x.ReviewSnippetsUrl != nil {
		return *x.ReviewSnippetsUrl
	}
	return ""
}

func (x *DocV2) GetReviewQuestionsUrl() string {
	if x != nil && x.ReviewQuestionsUrl != nil {
		return *x.ReviewQuestionsUrl
	}
	return ""
}

type Availability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restriction                      *int32                                           `protobuf:"varint,5,opt,name=restriction" json:"restriction,omitempty"`
	OfferType                        *int32                                           `protobuf:"varint,6,opt,name=offerType" json:"offerType,omitempty"`
	Rule                             *Rule                                            `protobuf:"bytes,7,opt,name=rule" json:"rule,omitempty"`
	Perdeviceavailabilityrestriction []*Availability_PerDeviceAvailabilityRestriction `protobuf:"group,9,rep,name=PerDeviceAvailabilityRestriction,json=perdeviceavailabilityrestriction" json:"perdeviceavailabilityrestriction,omitempty"`
	AvailableIfOwned                 *bool                                            `protobuf:"varint,13,opt,name=availableIfOwned" json:"availableIfOwned,omitempty"`
	Install                          []*Install                                       `protobuf:"bytes,14,rep,name=install" json:"install,omitempty"`
}

func (x *Availability) Reset() {
	*x = Availability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability) ProtoMessage() {}

func (x *Availability) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability.ProtoReflect.Descriptor instead.
func (*Availability) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{39}
}

func (x *Availability) GetRestriction() int32 {
	if x != nil && x.Restriction != nil {
		return *x.Restriction
	}
	return 0
}

func (x *Availability) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *Availability) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *Availability) GetPerdeviceavailabilityrestriction() []*Availability_PerDeviceAvailabilityRestriction {
	if x != nil {
		return x.Perdeviceavailabilityrestriction
	}
	return nil
}

func (x *Availability) GetAvailableIfOwned() bool {
	if x != nil && x.AvailableIfOwned != nil {
		return *x.AvailableIfOwned
	}
	return false
}

func (x *Availability) GetInstall() []*Install {
	if x != nil {
		return x.Install
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Negate        *bool     `protobuf:"varint,1,opt,name=negate" json:"negate,omitempty"`
	Operator      *int32    `protobuf:"varint,2,opt,name=operator" json:"operator,omitempty"`
	Key           *int32    `protobuf:"varint,3,opt,name=key" json:"key,omitempty"`
	StringArg     []string  `protobuf:"bytes,4,rep,name=stringArg" json:"stringArg,omitempty"`
	LongArg       []int64   `protobuf:"varint,5,rep,name=longArg" json:"longArg,omitempty"`
	DoubleArg     []float64 `protobuf:"fixed64,6,rep,name=doubleArg" json:"doubleArg,omitempty"`
	Subrule       []*Rule   `protobuf:"bytes,7,rep,name=subrule" json:"subrule,omitempty"`
	ResponseCode  *int32    `protobuf:"varint,8,opt,name=responseCode" json:"responseCode,omitempty"`
	Comment       *string   `protobuf:"bytes,9,opt,name=comment" json:"comment,omitempty"`
	StringArgHash []uint64  `protobuf:"fixed64,10,rep,name=stringArgHash" json:"stringArgHash,omitempty"`
	ConstArg      []int32   `protobuf:"varint,11,rep,name=constArg" json:"constArg,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{40}
}

func (x *Rule) GetNegate() bool {
	if x != nil && x.Negate != nil {
		return *x.Negate
	}
	return false
}

func (x *Rule) GetOperator() int32 {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return 0
}

func (x *Rule) GetKey() int32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *Rule) GetStringArg() []string {
	if x != nil {
		return x.StringArg
	}
	return nil
}

func (x *Rule) GetLongArg() []int64 {
	if x != nil {
		return x.LongArg
	}
	return nil
}

func (x *Rule) GetDoubleArg() []float64 {
	if x != nil {
		return x.DoubleArg
	}
	return nil
}

func (x *Rule) GetSubrule() []*Rule {
	if x != nil {
		return x.Subrule
	}
	return nil
}

func (x *Rule) GetResponseCode() int32 {
	if x != nil && x.ResponseCode != nil {
		return *x.ResponseCode
	}
	return 0
}

func (x *Rule) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Rule) GetStringArgHash() []uint64 {
	if x != nil {
		return x.StringArgHash
	}
	return nil
}

func (x *Rule) GetConstArg() []int32 {
	if x != nil {
		return x.ConstArg
	}
	return nil
}

type AggregateRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	StarRating         *float32 `protobuf:"fixed32,2,opt,name=starRating" json:"starRating,omitempty"`
	RatingsCount       *uint64  `protobuf:"varint,3,opt,name=ratingsCount" json:"ratingsCount,omitempty"`
	OneStarRatings     *uint64  `protobuf:"varint,4,opt,name=oneStarRatings" json:"oneStarRatings,omitempty"`
	TwoStarRatings     *uint64  `protobuf:"varint,5,opt,name=twoStarRatings" json:"twoStarRatings,omitempty"`
	ThreeStarRatings   *uint64  `protobuf:"varint,6,opt,name=threeStarRatings" json:"threeStarRatings,omitempty"`
	FourStarRatings    *uint64  `protobuf:"varint,7,opt,name=fourStarRatings" json:"fourStarRatings,omitempty"`
	FiveStarRatings    *uint64  `protobuf:"varint,8,opt,name=fiveStarRatings" json:"fiveStarRatings,omitempty"`
	ThumbsUpCount      *uint64  `protobuf:"varint,9,opt,name=thumbsUpCount" json:"thumbsUpCount,omitempty"`
	ThumbsDownCount    *uint64  `protobuf:"varint,10,opt,name=thumbsDownCount" json:"thumbsDownCount,omitempty"`
	CommentCount       *uint64  `protobuf:"varint,11,opt,name=commentCount" json:"commentCount,omitempty"`
	BayesianMeanRating *float64 `protobuf:"fixed64,12,opt,name=bayesianMeanRating" json:"bayesianMeanRating,omitempty"`
}

func (x *AggregateRating) Reset() {
	*x = AggregateRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRating) ProtoMessage() {}

func (x *AggregateRating) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRating.ProtoReflect.Descriptor instead.
func (*AggregateRating) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{41}
}

func (x *AggregateRating) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AggregateRating) GetStarRating() float32 {
	if x != nil && x.StarRating != nil {
		return *x.StarRating
	}
	return 0
}

func (x *AggregateRating) GetRatingsCount() uint64 {
	if x != nil && x.RatingsCount != nil {
		return *x.RatingsCount
	}
	return 0
}

func (x *AggregateRating) GetOneStarRatings() uint64 {
	if x != nil && x.OneStarRatings != nil {
		return *x.OneStarRatings
	}
	return 0
}

func (x *AggregateRating) GetTwoStarRatings() uint64 {
	if x != nil && x.TwoStarRatings != nil {
		return *x.TwoStarRatings
	}
	return 0
}

func (x *AggregateRating) GetThreeStarRatings() uint64 {
	if x != nil && x.ThreeStarRatings != nil {
		return *x.ThreeStarRatings
	}
	return 0
}

func (x *AggregateRating) GetFourStarRatings() uint64 {
	if x != nil && x.FourStarRatings != nil {
		return *x.FourStarRatings
	}
	return 0
}

func (x *AggregateRating) GetFiveStarRatings() uint64 {
	if x != nil && x.FiveStarRatings != nil {
		return *x.FiveStarRatings
	}
	return 0
}

func (x *AggregateRating) GetThumbsUpCount() uint64 {
	if x != nil && x.ThumbsUpCount != nil {
		return *x.ThumbsUpCount
	}
	return 0
}

func (x *AggregateRating) GetThumbsDownCount() uint64 {
	if x != nil && x.ThumbsDownCount != nil {
		return *x.ThumbsDownCount
	}
	return 0
}

func (x *AggregateRating) GetCommentCount() uint64 {
	if x != nil && x.CommentCount != nil {
		return *x.CommentCount
	}
	return 0
}

func (x *AggregateRating) GetBayesianMeanRating() float64 {
	if x != nil && x.BayesianMeanRating != nil {
		return *x.BayesianMeanRating
	}
	return 0
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListResponse               *ListResponse               `protobuf:"bytes,1,opt,name=listResponse" json:"listResponse,omitempty"`
	DetailsResponse            *DetailsResponse            `protobuf:"bytes,2,opt,name=detailsResponse" json:"detailsResponse,omitempty"`
	BuyResponse                *BuyResponse                `protobuf:"bytes,4,opt,name=buyResponse" json:"buyResponse,omitempty"`
	SearchResponse             *SearchResponse             `protobuf:"bytes,5,opt,name=searchResponse" json:"searchResponse,omitempty"`
	BrowseResponse             *BrowseResponse             `protobuf:"bytes,7,opt,name=browseResponse" json:"browseResponse,omitempty"`
	PurchaseStatusResponse     *PurchaseStatusResponse     `protobuf:"bytes,8,opt,name=purchaseStatusResponse" json:"purchaseStatusResponse,omitempty"`
	BulkDetailsResponse        *BulkDetailsResponse        `protobuf:"bytes,19,opt,name=bulkDetailsResponse" json:"bulkDetailsResponse,omitempty"`
	DeliveryResponse           *DeliveryResponse           `protobuf:"bytes,21,opt,name=deliveryResponse" json:"deliveryResponse,omitempty"`
	AndroidCheckinResponse     *AndroidCheckinResponse     `protobuf:"bytes,26,opt,name=androidCheckinResponse" json:"androidCheckinResponse,omitempty"`
	UploadDeviceConfigResponse *UploadDeviceConfigResponse `protobuf:"bytes,28,opt,name=uploadDeviceConfigResponse" json:"uploadDeviceConfigResponse,omitempty"`
	SearchSuggestResponse      *SearchSuggestResponse      `protobuf:"bytes,40,opt,name=searchSuggestResponse" json:"searchSuggestResponse,omitempty"`
	TestingProgramResponse     *TestingProgramResponse     `protobuf:"bytes,80,opt,name=testingProgramResponse" json:"testingProgramResponse,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{42}
}

func (x *Payload) GetListResponse() *ListResponse {
	if x != nil {
		return x.ListResponse
	}
	return nil
}

func (x *Payload) GetDetailsResponse() *DetailsResponse {
	if x != nil {
		return x.DetailsResponse
	}
	return nil
}

func (x *Payload) GetBuyResponse() *BuyResponse {
	if x != nil {
		return x.BuyResponse
	}
	return nil
}

func (x *Payload) GetSearchResponse() *SearchResponse {
	if x != nil {
		return x.SearchResponse
	}
	return nil
}

func (x *Payload) GetBrowseResponse() *BrowseResponse {
	if x != nil {
		return x.BrowseResponse
	}
	return nil
}

func (x *Payload) GetPurchaseStatusResponse() *PurchaseStatusResponse {
	if x != nil {
		return x.PurchaseStatusResponse
	}
	return nil
}

func (x *Payload) GetBulkDetailsResponse() *BulkDetailsResponse {
	if x != nil {
		return x.BulkDetailsResponse
	}
	return nil
}

func (x *Payload) GetDeliveryResponse() *DeliveryResponse {
	if x != nil {
		return x.DeliveryResponse
	}
	return nil
}

func (x *Payload) GetAndroidCheckinResponse() *AndroidCheckinResponse {
	if x != nil {
		return x.AndroidCheckinResponse
	}
	return nil
}

func (x *Payload) GetUploadDeviceConfigResponse() *UploadDeviceConfigResponse {
	if x != nil {
		return x.UploadDeviceConfigResponse
	}
	return nil
}

func (x *Payload) GetSearchSuggestResponse() *SearchSuggestResponse {
	if x != nil {
		return x.SearchSuggestResponse
	}
	return nil
}

func (x *Payload) GetTestingProgramResponse() *TestingProgramResponse {
	if x != nil {
		return x.TestingProgramResponse
	}
	return nil
}

type ServerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatencyMillis *int64 `protobuf:"varint,1,opt,name=latencyMillis" json:"latencyMillis,omitempty"`
}

func (x *ServerMetadata) Reset() {
	*x = ServerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMetadata) ProtoMessage() {}

func (x *ServerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMetadata.ProtoReflect.Descriptor instead.
func (*ServerMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{43}
}

func (x *ServerMetadata) GetLatencyMillis() int64 {
	if x != nil && x.LatencyMillis != nil {
		return *x.LatencyMillis
	}
	return 0
}

type ServerCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Token []byte `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (x *ServerCookie) Reset() {
	*x = ServerCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCookie) ProtoMessage() {}

func (x *ServerCookie) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCookie.ProtoReflect.Descriptor instead.
func (*ServerCookie) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{44}
}

func (x *ServerCookie) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ServerCookie) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ServerCookies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerCookie []*ServerCookie `protobuf:"bytes,1,rep,name=serverCookie" json:"serverCookie,omitempty"`
}

func (x *ServerCookies) Reset() {
	*x = ServerCookies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCookies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCookies) ProtoMessage() {}

func (x *ServerCookies) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCookies.ProtoReflect.Descriptor instead.
func (*ServerCookies) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{45}
}

func (x *ServerCookies) GetServerCookie() []*ServerCookie {
	if x != nil {
		return x.ServerCookie
	}
	return nil
}

type ResponseWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload          *Payload        `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
	Commands         *ServerCommands `protobuf:"bytes,2,opt,name=commands" json:"commands,omitempty"`
	ServerMetadata   *ServerMetadata `protobuf:"bytes,5,opt,name=serverMetadata" json:"serverMetadata,omitempty"`
	ServerCookies    *ServerCookies  `protobuf:"bytes,7,opt,name=serverCookies" json:"serverCookies,omitempty"`
	ServerLogsCookie []byte          `protobuf:"bytes,9,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
}

func (x *ResponseWrapper) Reset() {
	*x = ResponseWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWrapper) ProtoMessage() {}

func (x *ResponseWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWrapper.ProtoReflect.Descriptor instead.
func (*ResponseWrapper) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{46}
}

func (x *ResponseWrapper) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ResponseWrapper) GetCommands() *ServerCommands {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *ResponseWrapper) GetServerMetadata() *ServerMetadata {
	if x != nil {
		return x.ServerMetadata
	}
	return nil
}

func (x *ResponseWrapper) GetServerCookies() *ServerCookies {
	if x != nil {
		return x.ServerCookies
	}
	return nil
}

func (x *ResponseWrapper) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

type ServerCommands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayErrorMessage *string `protobuf:"bytes,2,opt,name=displayErrorMessage" json:"displayErrorMessage,omitempty"`
}

func (x *ServerCommands) Reset() {
	*x = ServerCommands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerCommands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCommands) ProtoMessage() {}

func (x *ServerCommands) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCommands.ProtoReflect.Descriptor instead.
func (*ServerCommands) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{47}
}

func (x *ServerCommands) GetDisplayErrorMessage() string {
	if x != nil && x.DisplayErrorMessage != nil {
		return *x.DisplayErrorMessage
	}
	return ""
}

type RelatedSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchUrl *string `protobuf:"bytes,1,opt,name=searchUrl" json:"searchUrl,omitempty"`
	Header    *string `protobuf:"bytes,2,opt,name=header" json:"header,omitempty"`
	BackendId *int32  `protobuf:"varint,3,opt,name=backendId" json:"backendId,omitempty"`
	DocType   *int32  `protobuf:"varint,4,opt,name=docType" json:"docType,omitempty"`
	Current   *bool   `protobuf:"varint,5,opt,name=current" json:"current,omitempty"`
}

func (x *RelatedSearch) Reset() {
	*x = RelatedSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedSearch) ProtoMessage() {}

func (x *RelatedSearch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedSearch.ProtoReflect.Descriptor instead.
func (*RelatedSearch) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{48}
}

func (x *RelatedSearch) GetSearchUrl() string {
	if x != nil && x.SearchUrl != nil {
		return *x.SearchUrl
	}
	return ""
}

func (x *RelatedSearch) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *RelatedSearch) GetBackendId() int32 {
	if x != nil && x.BackendId != nil {
		return *x.BackendId
	}
	return 0
}

func (x *RelatedSearch) GetDocType() int32 {
	if x != nil && x.DocType != nil {
		return *x.DocType
	}
	return 0
}

func (x *RelatedSearch) GetCurrent() bool {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return false
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalQuery  *string          `protobuf:"bytes,1,opt,name=originalQuery" json:"originalQuery,omitempty"`
	SuggestedQuery *string          `protobuf:"bytes,2,opt,name=suggestedQuery" json:"suggestedQuery,omitempty"`
	AggregateQuery *bool            `protobuf:"varint,3,opt,name=aggregateQuery" json:"aggregateQuery,omitempty"`
	Doc            []*DocV2         `protobuf:"bytes,5,rep,name=doc" json:"doc,omitempty"`
	RelatedSearch  []*RelatedSearch `protobuf:"bytes,6,rep,name=relatedSearch" json:"relatedSearch,omitempty"`
	NextPageUrl    *string          `protobuf:"bytes,10,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{49}
}

func (x *SearchResponse) GetOriginalQuery() string {
	if x != nil && x.OriginalQuery != nil {
		return *x.OriginalQuery
	}
	return ""
}

func (x *SearchResponse) GetSuggestedQuery() string {
	if x != nil && x.SuggestedQuery != nil {
		return *x.SuggestedQuery
	}
	return ""
}

func (x *SearchResponse) GetAggregateQuery() bool {
	if x != nil && x.AggregateQuery != nil {
		return *x.AggregateQuery
	}
	return false
}

func (x *SearchResponse) GetDoc() []*DocV2 {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *SearchResponse) GetRelatedSearch() []*RelatedSearch {
	if x != nil {
		return x.RelatedSearch
	}
	return nil
}

func (x *SearchResponse) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

type SearchSuggestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*SearchSuggestEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (x *SearchSuggestResponse) Reset() {
	*x = SearchSuggestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestResponse) ProtoMessage() {}

func (x *SearchSuggestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestResponse.ProtoReflect.Descriptor instead.
func (*SearchSuggestResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{50}
}

func (x *SearchSuggestResponse) GetEntry() []*SearchSuggestEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type SearchSuggestEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 *int32                                   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	SuggestedQuery       *string                                  `protobuf:"bytes,2,opt,name=suggestedQuery" json:"suggestedQuery,omitempty"`
	ImageContainer       *SearchSuggestEntry_ImageContainer       `protobuf:"bytes,5,opt,name=imageContainer" json:"imageContainer,omitempty"`
	Title                *string                                  `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	PackageNameContainer *SearchSuggestEntry_PackageNameContainer `protobuf:"bytes,8,opt,name=packageNameContainer" json:"packageNameContainer,omitempty"`
}

func (x *SearchSuggestEntry) Reset() {
	*x = SearchSuggestEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestEntry) ProtoMessage() {}

func (x *SearchSuggestEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestEntry.ProtoReflect.Descriptor instead.
func (*SearchSuggestEntry) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{51}
}

func (x *SearchSuggestEntry) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SearchSuggestEntry) GetSuggestedQuery() string {
	if x != nil && x.SuggestedQuery != nil {
		return *x.SuggestedQuery
	}
	return ""
}

func (x *SearchSuggestEntry) GetImageContainer() *SearchSuggestEntry_ImageContainer {
	if x != nil {
		return x.ImageContainer
	}
	return nil
}

func (x *SearchSuggestEntry) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *SearchSuggestEntry) GetPackageNameContainer() *SearchSuggestEntry_PackageNameContainer {
	if x != nil {
		return x.PackageNameContainer
	}
	return nil
}

type TestingProgramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TestingProgramResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (x *TestingProgramResponse) Reset() {
	*x = TestingProgramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramResponse) ProtoMessage() {}

func (x *TestingProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramResponse.ProtoReflect.Descriptor instead.
func (*TestingProgramResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{52}
}

func (x *TestingProgramResponse) GetResult() *TestingProgramResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TestingProgramResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *TestingProgramDetails `protobuf:"bytes,4,opt,name=details" json:"details,omitempty"`
}

func (x *TestingProgramResult) Reset() {
	*x = TestingProgramResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramResult) ProtoMessage() {}

func (x *TestingProgramResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramResult.ProtoReflect.Descriptor instead.
func (*TestingProgramResult) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{53}
}

func (x *TestingProgramResult) GetDetails() *TestingProgramDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type TestingProgramDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag1        *bool  `protobuf:"varint,2,opt,name=flag1" json:"flag1,omitempty"`
	Id           *int64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Unsubscribed *bool  `protobuf:"varint,4,opt,name=unsubscribed" json:"unsubscribed,omitempty"`
}

func (x *TestingProgramDetails) Reset() {
	*x = TestingProgramDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramDetails) ProtoMessage() {}

func (x *TestingProgramDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramDetails.ProtoReflect.Descriptor instead.
func (*TestingProgramDetails) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{54}
}

func (x *TestingProgramDetails) GetFlag1() bool {
	if x != nil && x.Flag1 != nil {
		return *x.Flag1
	}
	return false
}

func (x *TestingProgramDetails) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TestingProgramDetails) GetUnsubscribed() bool {
	if x != nil && x.Unsubscribed != nil {
		return *x.Unsubscribed
	}
	return false
}

type UploadDeviceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceConfiguration *DeviceConfigurationProto `protobuf:"bytes,1,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	Manufacturer        *string                   `protobuf:"bytes,2,opt,name=manufacturer" json:"manufacturer,omitempty"`
	GcmRegistrationId   *string                   `protobuf:"bytes,3,opt,name=gcmRegistrationId" json:"gcmRegistrationId,omitempty"`
}

func (x *UploadDeviceConfigRequest) Reset() {
	*x = UploadDeviceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDeviceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDeviceConfigRequest) ProtoMessage() {}

func (x *UploadDeviceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDeviceConfigRequest.ProtoReflect.Descriptor instead.
func (*UploadDeviceConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{55}
}

func (x *UploadDeviceConfigRequest) GetDeviceConfiguration() *DeviceConfigurationProto {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *UploadDeviceConfigRequest) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *UploadDeviceConfigRequest) GetGcmRegistrationId() string {
	if x != nil && x.GcmRegistrationId != nil {
		return *x.GcmRegistrationId
	}
	return ""
}

type UploadDeviceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadDeviceConfigToken *string `protobuf:"bytes,1,opt,name=uploadDeviceConfigToken" json:"uploadDeviceConfigToken,omitempty"`
}

func (x *UploadDeviceConfigResponse) Reset() {
	*x = UploadDeviceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDeviceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDeviceConfigResponse) ProtoMessage() {}

func (x *UploadDeviceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDeviceConfigResponse.ProtoReflect.Descriptor instead.
func (*UploadDeviceConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{56}
}

func (x *UploadDeviceConfigResponse) GetUploadDeviceConfigToken() string {
	if x != nil && x.UploadDeviceConfigToken != nil {
		return *x.UploadDeviceConfigToken
	}
	return ""
}

type AndroidCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei                *string                   `protobuf:"bytes,1,opt,name=imei" json:"imei,omitempty"`
	Id                  *uint64                   `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Digest              *string                   `protobuf:"bytes,3,opt,name=digest" json:"digest,omitempty"`
	Checkin             *AndroidCheckinProto      `protobuf:"bytes,4,opt,name=checkin" json:"checkin,omitempty"`
	DesiredBuild        *string                   `protobuf:"bytes,5,opt,name=desiredBuild" json:"desiredBuild,omitempty"`
	Locale              *string                   `protobuf:"bytes,6,opt,name=locale" json:"locale,omitempty"`
	LoggingId           *int64                    `protobuf:"varint,7,opt,name=loggingId" json:"loggingId,omitempty"`
	MarketCheckin       *string                   `protobuf:"bytes,8,opt,name=marketCheckin" json:"marketCheckin,omitempty"`
	MacAddr             []string                  `protobuf:"bytes,9,rep,name=macAddr" json:"macAddr,omitempty"`
	Meid                *string                   `protobuf:"bytes,10,opt,name=meid" json:"meid,omitempty"`
	AccountCookie       []string                  `protobuf:"bytes,11,rep,name=accountCookie" json:"accountCookie,omitempty"`
	TimeZone            *string                   `protobuf:"bytes,12,opt,name=timeZone" json:"timeZone,omitempty"`
	SecurityToken       *uint64                   `protobuf:"fixed64,13,opt,name=securityToken" json:"securityToken,omitempty"`
	Version             *int32                    `protobuf:"varint,14,opt,name=version" json:"version,omitempty"`
	OtaCert             []string                  `protobuf:"bytes,15,rep,name=otaCert" json:"otaCert,omitempty"`
	SerialNumber        *string                   `protobuf:"bytes,16,opt,name=serialNumber" json:"serialNumber,omitempty"`
	Esn                 *string                   `protobuf:"bytes,17,opt,name=esn" json:"esn,omitempty"`
	DeviceConfiguration *DeviceConfigurationProto `protobuf:"bytes,18,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	MacAddrType         []string                  `protobuf:"bytes,19,rep,name=macAddrType" json:"macAddrType,omitempty"`
	Fragment            *int32                    `protobuf:"varint,20,opt,name=fragment" json:"fragment,omitempty"`
	UserName            *string                   `protobuf:"bytes,21,opt,name=userName" json:"userName,omitempty"`
	UserSerialNumber    *int32                    `protobuf:"varint,22,opt,name=userSerialNumber" json:"userSerialNumber,omitempty"`
}

func (x *AndroidCheckinRequest) Reset() {
	*x = AndroidCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinRequest) ProtoMessage() {}

func (x *AndroidCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinRequest.ProtoReflect.Descriptor instead.
func (*AndroidCheckinRequest) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{57}
}

func (x *AndroidCheckinRequest) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *AndroidCheckinRequest) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AndroidCheckinRequest) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *AndroidCheckinRequest) GetCheckin() *AndroidCheckinProto {
	if x != nil {
		return x.Checkin
	}
	return nil
}

func (x *AndroidCheckinRequest) GetDesiredBuild() string {
	if x != nil && x.DesiredBuild != nil {
		return *x.DesiredBuild
	}
	return ""
}

func (x *AndroidCheckinRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *AndroidCheckinRequest) GetLoggingId() int64 {
	if x != nil && x.LoggingId != nil {
		return *x.LoggingId
	}
	return 0
}

func (x *AndroidCheckinRequest) GetMarketCheckin() string {
	if x != nil && x.MarketCheckin != nil {
		return *x.MarketCheckin
	}
	return ""
}

func (x *AndroidCheckinRequest) GetMacAddr() []string {
	if x != nil {
		return x.MacAddr
	}
	return nil
}

func (x *AndroidCheckinRequest) GetMeid() string {
	if x != nil && x.Meid != nil {
		return *x.Meid
	}
	return ""
}

func (x *AndroidCheckinRequest) GetAccountCookie() []string {
	if x != nil {
		return x.AccountCookie
	}
	return nil
}

func (x *AndroidCheckinRequest) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

func (x *AndroidCheckinRequest) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *AndroidCheckinRequest) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *AndroidCheckinRequest) GetOtaCert() []string {
	if x != nil {
		return x.OtaCert
	}
	return nil
}

func (x *AndroidCheckinRequest) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *AndroidCheckinRequest) GetEsn() string {
	if x != nil && x.Esn != nil {
		return *x.Esn
	}
	return ""
}

func (x *AndroidCheckinRequest) GetDeviceConfiguration() *DeviceConfigurationProto {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *AndroidCheckinRequest) GetMacAddrType() []string {
	if x != nil {
		return x.MacAddrType
	}
	return nil
}

func (x *AndroidCheckinRequest) GetFragment() int32 {
	if x != nil && x.Fragment != nil {
		return *x.Fragment
	}
	return 0
}

func (x *AndroidCheckinRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *AndroidCheckinRequest) GetUserSerialNumber() int32 {
	if x != nil && x.UserSerialNumber != nil {
		return *x.UserSerialNumber
	}
	return 0
}

type AndroidCheckinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatsOk                       *bool   `protobuf:"varint,1,opt,name=statsOk" json:"statsOk,omitempty"`
	TimeMsec                      *int64  `protobuf:"varint,3,opt,name=timeMsec" json:"timeMsec,omitempty"`
	Digest                        *string `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	AndroidId                     *uint64 `protobuf:"fixed64,7,opt,name=androidId" json:"androidId,omitempty"`
	SecurityToken                 *uint64 `protobuf:"fixed64,8,opt,name=securityToken" json:"securityToken,omitempty"`
	DeviceCheckinConsistencyToken *string `protobuf:"bytes,12,opt,name=deviceCheckinConsistencyToken" json:"deviceCheckinConsistencyToken,omitempty"`
}

func (x *AndroidCheckinResponse) Reset() {
	*x = AndroidCheckinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinResponse) ProtoMessage() {}

func (x *AndroidCheckinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinResponse.ProtoReflect.Descriptor instead.
func (*AndroidCheckinResponse) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{58}
}

func (x *AndroidCheckinResponse) GetStatsOk() bool {
	if x != nil && x.StatsOk != nil {
		return *x.StatsOk
	}
	return false
}

func (x *AndroidCheckinResponse) GetTimeMsec() int64 {
	if x != nil && x.TimeMsec != nil {
		return *x.TimeMsec
	}
	return 0
}

func (x *AndroidCheckinResponse) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *AndroidCheckinResponse) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *AndroidCheckinResponse) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *AndroidCheckinResponse) GetDeviceCheckinConsistencyToken() string {
	if x != nil && x.DeviceCheckinConsistencyToken != nil {
		return *x.DeviceCheckinConsistencyToken
	}
	return ""
}

type AndroidBuildProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Product        *string `protobuf:"bytes,2,opt,name=product" json:"product,omitempty"`
	Carrier        *string `protobuf:"bytes,3,opt,name=carrier" json:"carrier,omitempty"`
	Radio          *string `protobuf:"bytes,4,opt,name=radio" json:"radio,omitempty"`
	Bootloader     *string `protobuf:"bytes,5,opt,name=bootloader" json:"bootloader,omitempty"`
	Client         *string `protobuf:"bytes,6,opt,name=client" json:"client,omitempty"`
	Timestamp      *int64  `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
	GoogleServices *int32  `protobuf:"varint,8,opt,name=googleServices" json:"googleServices,omitempty"`
	Device         *string `protobuf:"bytes,9,opt,name=device" json:"device,omitempty"`
	SdkVersion     *int32  `protobuf:"varint,10,opt,name=sdkVersion" json:"sdkVersion,omitempty"`
	Model          *string `protobuf:"bytes,11,opt,name=model" json:"model,omitempty"`
	Manufacturer   *string `protobuf:"bytes,12,opt,name=manufacturer" json:"manufacturer,omitempty"`
	BuildProduct   *string `protobuf:"bytes,13,opt,name=buildProduct" json:"buildProduct,omitempty"`
	OtaInstalled   *bool   `protobuf:"varint,14,opt,name=otaInstalled" json:"otaInstalled,omitempty"`
}

func (x *AndroidBuildProto) Reset() {
	*x = AndroidBuildProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidBuildProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidBuildProto) ProtoMessage() {}

func (x *AndroidBuildProto) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidBuildProto.ProtoReflect.Descriptor instead.
func (*AndroidBuildProto) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{59}
}

func (x *AndroidBuildProto) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AndroidBuildProto) GetProduct() string {
	if x != nil && x.Product != nil {
		return *x.Product
	}
	return ""
}

func (x *AndroidBuildProto) GetCarrier() string {
	if x != nil && x.Carrier != nil {
		return *x.Carrier
	}
	return ""
}

func (x *AndroidBuildProto) GetRadio() string {
	if x != nil && x.Radio != nil {
		return *x.Radio
	}
	return ""
}

func (x *AndroidBuildProto) GetBootloader() string {
	if x != nil && x.Bootloader != nil {
		return *x.Bootloader
	}
	return ""
}

func (x *AndroidBuildProto) GetClient() string {
	if x != nil && x.Client != nil {
		return *x.Client
	}
	return ""
}

func (x *AndroidBuildProto) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *AndroidBuildProto) GetGoogleServices() int32 {
	if x != nil && x.GoogleServices != nil {
		return *x.GoogleServices
	}
	return 0
}

func (x *AndroidBuildProto) GetDevice() string {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return ""
}

func (x *AndroidBuildProto) GetSdkVersion() int32 {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return 0
}

func (x *AndroidBuildProto) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *AndroidBuildProto) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *AndroidBuildProto) GetBuildProduct() string {
	if x != nil && x.BuildProduct != nil {
		return *x.BuildProduct
	}
	return ""
}

func (x *AndroidBuildProto) GetOtaInstalled() bool {
	if x != nil && x.OtaInstalled != nil {
		return *x.OtaInstalled
	}
	return false
}

type AndroidCheckinProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build           *AndroidBuildProto `protobuf:"bytes,1,opt,name=build" json:"build,omitempty"`
	LastCheckinMsec *int64             `protobuf:"varint,2,opt,name=lastCheckinMsec" json:"lastCheckinMsec,omitempty"`
	CellOperator    *string            `protobuf:"bytes,6,opt,name=cellOperator" json:"cellOperator,omitempty"`
	SimOperator     *string            `protobuf:"bytes,7,opt,name=simOperator" json:"simOperator,omitempty"`
	Roaming         *string            `protobuf:"bytes,8,opt,name=roaming" json:"roaming,omitempty"`
	UserNumber      *int32             `protobuf:"varint,9,opt,name=userNumber" json:"userNumber,omitempty"`
}

func (x *AndroidCheckinProto) Reset() {
	*x = AndroidCheckinProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinProto) ProtoMessage() {}

func (x *AndroidCheckinProto) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinProto.ProtoReflect.Descriptor instead.
func (*AndroidCheckinProto) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{60}
}

func (x *AndroidCheckinProto) GetBuild() *AndroidBuildProto {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *AndroidCheckinProto) GetLastCheckinMsec() int64 {
	if x != nil && x.LastCheckinMsec != nil {
		return *x.LastCheckinMsec
	}
	return 0
}

func (x *AndroidCheckinProto) GetCellOperator() string {
	if x != nil && x.CellOperator != nil {
		return *x.CellOperator
	}
	return ""
}

func (x *AndroidCheckinProto) GetSimOperator() string {
	if x != nil && x.SimOperator != nil {
		return *x.SimOperator
	}
	return ""
}

func (x *AndroidCheckinProto) GetRoaming() string {
	if x != nil && x.Roaming != nil {
		return *x.Roaming
	}
	return ""
}

func (x *AndroidCheckinProto) GetUserNumber() int32 {
	if x != nil && x.UserNumber != nil {
		return *x.UserNumber
	}
	return 0
}

type BuyResponse_CheckoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item           *LineItem                                  `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	SubItem        []*LineItem                                `protobuf:"bytes,4,rep,name=subItem" json:"subItem,omitempty"`
	Checkoutoption []*BuyResponse_CheckoutInfo_CheckoutOption `protobuf:"group,5,rep,name=CheckoutOption,json=checkoutoption" json:"checkoutoption,omitempty"`
}

func (x *BuyResponse_CheckoutInfo) Reset() {
	*x = BuyResponse_CheckoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse_CheckoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse_CheckoutInfo) ProtoMessage() {}

func (x *BuyResponse_CheckoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse_CheckoutInfo.ProtoReflect.Descriptor instead.
func (*BuyResponse_CheckoutInfo) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{10, 0}
}

func (x *BuyResponse_CheckoutInfo) GetItem() *LineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetSubItem() []*LineItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetCheckoutoption() []*BuyResponse_CheckoutInfo_CheckoutOption {
	if x != nil {
		return x.Checkoutoption
	}
	return nil
}

type BuyResponse_CheckoutInfo_CheckoutOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormOfPayment       *string     `protobuf:"bytes,6,opt,name=formOfPayment" json:"formOfPayment,omitempty"`
	EncodedAdjustedCart *string     `protobuf:"bytes,7,opt,name=encodedAdjustedCart" json:"encodedAdjustedCart,omitempty"`
	Item                []*LineItem `protobuf:"bytes,16,rep,name=item" json:"item,omitempty"`
	SubItem             []*LineItem `protobuf:"bytes,17,rep,name=subItem" json:"subItem,omitempty"`
	Total               *LineItem   `protobuf:"bytes,18,opt,name=total" json:"total,omitempty"`
	Summary             *LineItem   `protobuf:"bytes,33,opt,name=summary" json:"summary,omitempty"`
	PurchaseCookie      *string     `protobuf:"bytes,45,opt,name=purchaseCookie" json:"purchaseCookie,omitempty"`
	DisabledReason      []string    `protobuf:"bytes,48,rep,name=disabledReason" json:"disabledReason,omitempty"`
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) Reset() {
	*x = BuyResponse_CheckoutInfo_CheckoutOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse_CheckoutInfo_CheckoutOption) ProtoMessage() {}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse_CheckoutInfo_CheckoutOption.ProtoReflect.Descriptor instead.
func (*BuyResponse_CheckoutInfo_CheckoutOption) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFormOfPayment() string {
	if x != nil && x.FormOfPayment != nil {
		return *x.FormOfPayment
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetEncodedAdjustedCart() string {
	if x != nil && x.EncodedAdjustedCart != nil {
		return *x.EncodedAdjustedCart
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetItem() []*LineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSubItem() []*LineItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetTotal() *LineItem {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSummary() *LineItem {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetPurchaseCookie() string {
	if x != nil && x.PurchaseCookie != nil {
		return *x.PurchaseCookie
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetDisabledReason() []string {
	if x != nil {
		return x.DisabledReason
	}
	return nil
}

type DebugInfo_Timing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TimeInMs *float64 `protobuf:"fixed64,4,opt,name=timeInMs" json:"timeInMs,omitempty"`
}

func (x *DebugInfo_Timing) Reset() {
	*x = DebugInfo_Timing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfo_Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo_Timing) ProtoMessage() {}

func (x *DebugInfo_Timing) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfo_Timing.ProtoReflect.Descriptor instead.
func (*DebugInfo_Timing) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{21, 0}
}

func (x *DebugInfo_Timing) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DebugInfo_Timing) GetTimeInMs() float64 {
	if x != nil && x.TimeInMs != nil {
		return *x.TimeInMs
	}
	return 0
}

type Image_Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  *int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
}

func (x *Image_Dimension) Reset() {
	*x = Image_Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Dimension) ProtoMessage() {}

func (x *Image_Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Dimension.ProtoReflect.Descriptor instead.
func (*Image_Dimension) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{29, 0}
}

func (x *Image_Dimension) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Image_Dimension) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type Image_Citation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleLocalized *string `protobuf:"bytes,11,opt,name=titleLocalized" json:"titleLocalized,omitempty"`
	Url            *string `protobuf:"bytes,12,opt,name=url" json:"url,omitempty"`
}

func (x *Image_Citation) Reset() {
	*x = Image_Citation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Citation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Citation) ProtoMessage() {}

func (x *Image_Citation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Citation.ProtoReflect.Descriptor instead.
func (*Image_Citation) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{29, 1}
}

func (x *Image_Citation) GetTitleLocalized() string {
	if x != nil && x.TitleLocalized != nil {
		return *x.TitleLocalized
	}
	return ""
}

func (x *Image_Citation) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type Availability_PerDeviceAvailabilityRestriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AndroidId         *uint64 `protobuf:"fixed64,10,opt,name=androidId" json:"androidId,omitempty"`
	DeviceRestriction *int32  `protobuf:"varint,11,opt,name=deviceRestriction" json:"deviceRestriction,omitempty"`
	ChannelId         *int64  `protobuf:"varint,12,opt,name=channelId" json:"channelId,omitempty"`
}

func (x *Availability_PerDeviceAvailabilityRestriction) Reset() {
	*x = Availability_PerDeviceAvailabilityRestriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability_PerDeviceAvailabilityRestriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability_PerDeviceAvailabilityRestriction) ProtoMessage() {}

func (x *Availability_PerDeviceAvailabilityRestriction) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability_PerDeviceAvailabilityRestriction.ProtoReflect.Descriptor instead.
func (*Availability_PerDeviceAvailabilityRestriction) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{39, 0}
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetDeviceRestriction() int32 {
	if x != nil && x.DeviceRestriction != nil {
		return *x.DeviceRestriction
	}
	return 0
}

func (x *Availability_PerDeviceAvailabilityRestriction) GetChannelId() int64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

type SearchSuggestEntry_ImageContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl *string `protobuf:"bytes,5,opt,name=imageUrl" json:"imageUrl,omitempty"`
}

func (x *SearchSuggestEntry_ImageContainer) Reset() {
	*x = SearchSuggestEntry_ImageContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestEntry_ImageContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestEntry_ImageContainer) ProtoMessage() {}

func (x *SearchSuggestEntry_ImageContainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestEntry_ImageContainer.ProtoReflect.Descriptor instead.
func (*SearchSuggestEntry_ImageContainer) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{51, 0}
}

func (x *SearchSuggestEntry_ImageContainer) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

type SearchSuggestEntry_PackageNameContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName *string `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
}

func (x *SearchSuggestEntry_PackageNameContainer) Reset() {
	*x = SearchSuggestEntry_PackageNameContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_playstore_playstore_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSuggestEntry_PackageNameContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSuggestEntry_PackageNameContainer) ProtoMessage() {}

func (x *SearchSuggestEntry_PackageNameContainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_playstore_playstore_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSuggestEntry_PackageNameContainer.ProtoReflect.Descriptor instead.
func (*SearchSuggestEntry_PackageNameContainer) Descriptor() ([]byte, []int) {
	return file_pkg_playstore_playstore_proto_rawDescGZIP(), []int{51, 1}
}

func (x *SearchSuggestEntry_PackageNameContainer) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

var File_pkg_playstore_playstore_proto protoreflect.FileDescriptor

var file_pkg_playstore_playstore_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x70, 0x6c, 0x61, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8a, 0x05, 0x0a, 0x16, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68,
	0x61, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41,
	0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3b,
	0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1d, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1d, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e,
	0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x47,
	0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x05, 0x73,
	0x70, 0x6c, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0xcf, 0x01, 0x0a,
	0x05, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x68, 0x61, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47,
	0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0xeb,
	0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x7a,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x69, 0x7a,
	0x65, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x47, 0x7a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61, 0x31, 0x22, 0x6c, 0x0a, 0x10,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x6d, 0x61, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x36, 0x0a, 0x0a, 0x48, 0x74,
	0x74, 0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x18, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x18, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x22, 0x62, 0x0a, 0x18, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x13, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xe6, 0x01,
	0x0a, 0x0e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x55,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x27,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64,
	0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63,
	0x72, 0x75, 0x6d, 0x62, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x22, 0x95, 0x08, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x19, 0x2e, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x56,
	0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x56, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x62, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x73, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x25, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x48, 0x74, 0x6d,
	0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x61, 0x62, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69,
	0x61, 0x62, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4f, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0xe9, 0x03, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x28, 0x2e,
	0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc2, 0x02, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f,
	0x72, 0x6d, 0x4f, 0x66, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x66, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43, 0x61,
	0x72, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x30, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x08,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x22, 0xcd, 0x01, 0x0a,
	0x16, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x70, 0x70,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22, 0x5b,
	0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x22, 0xab, 0x05, 0x0a, 0x05,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x64, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x53,
	0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73,
	0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x61, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x35,
	0x0a, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x22, 0x36, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x67, 0x6f, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x55, 0x72, 0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0a,
	0x32, 0x11, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x1a, 0x38, 0x0a, 0x06, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x4d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x4d, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x56, 0x32, 0x52, 0x03,
	0x64, 0x6f, 0x63, 0x22, 0x56, 0x0a, 0x12, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x63,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x44,
	0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x73, 0x22, 0x3e, 0x0a, 0x13, 0x42,
	0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x0f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x44, 0x6f, 0x63, 0x56, 0x31, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x31, 0x12, 0x1c, 0x0a,
	0x05, 0x64, 0x6f, 0x63, 0x56, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44,
	0x6f, 0x63, 0x56, 0x32, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x56, 0x32, 0x12, 0x2a, 0x0a, 0x10, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x1b, 0x70, 0x6f, 0x73, 0x74, 0x41,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x6f,
	0x73, 0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x22, 0xc8, 0x05, 0x0a, 0x18, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x75,
	0x63, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x48,
	0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x48, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x46, 0x69, 0x76, 0x65, 0x57, 0x61, 0x79,
	0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x68, 0x61, 0x73, 0x46, 0x69, 0x76, 0x65, 0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x6c, 0x45, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x67, 0x6c, 0x45, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x12, 0x36, 0x0a, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x41, 0x70, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x6d, 0x61, 0x78, 0x41, 0x70, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x4d, 0x62, 0x22, 0xcf, 0x05, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0a, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x52, 0x0a, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44,
	0x6f, 0x63, 0x69, 0x64, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x3a, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x12, 0x3a, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0a,
	0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x63,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x22, 0xeb, 0x02, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x39, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x61, 0x75, 0x74,
	0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65, 0x63,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x04, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0a, 0x32,
	0x10, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x69,
	0x66, 0x65, 0x55, 0x72, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x69, 0x66, 0x65,
	0x55, 0x72, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0a, 0x32, 0x0f, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a,
	0x13, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a,
	0x39, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x44, 0x0a, 0x08, 0x43, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x6c, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x84,
	0x06, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x48, 0x74, 0x6d, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x68, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73,
	0x41, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x73, 0x41, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0f, 0x65,
	0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x31, 0x12, 0x30,
	0x0a, 0x13, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x27, 0x0a, 0x0f, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3e, 0x0a, 0x0f, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x0a,
	0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x60, 0x0a, 0x0c, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x03, 0x64,
	0x6f, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x56, 0x32,
	0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0xbe, 0x04, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x56, 0x31, 0x12,
	0x27, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x73, 0x6b, 0x79, 0x44, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x66,
	0x69, 0x6e, 0x73, 0x6b, 0x79, 0x44, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x6f, 0x72, 0x65, 0x42, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x6f, 0x72, 0x65, 0x42, 0x79, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x72, 0x65,
	0x42, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xca, 0x06, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x56, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x6f, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x1c, 0x0a, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63,
	0x56, 0x32, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72,
	0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x72,
	0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73,
	0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x55, 0x72, 0x6c, 0x22, 0xc4, 0x03, 0x0a, 0x0c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12,
	0x7a, 0x0a, 0x20, 0x70, 0x65, 0x72, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x2e, 0x2e, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x20, 0x70, 0x65, 0x72, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x66, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x66, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x1a, 0x8c, 0x01, 0x0a, 0x20,
	0x50, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xc3, 0x02, 0x0a, 0x04, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x6e, 0x67, 0x41,
	0x72, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x6e, 0x67, 0x41, 0x72,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x12,
	0x1f, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x72, 0x75, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x41, 0x72, 0x67,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x41, 0x72, 0x67,
	0x22, 0xdd, 0x03, 0x0a, 0x0f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x77, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x77,
	0x6f, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x68, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x75, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x66, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x55, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x55, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x44, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2e, 0x0a, 0x12, 0x62, 0x61, 0x79, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x4d, 0x65, 0x61, 0x6e,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x62, 0x61,
	0x79, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0xbf, 0x06, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x0c,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x62,
	0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b,
	0x62, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x42, 0x75,
	0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x16, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x1a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x1a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x16, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22, 0x38, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x42, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x2b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x37, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0x42, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x97, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44,
	0x6f, 0x63, 0x56, 0x32, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x22, 0x42, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xf8, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x14, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x14, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x1a, 0x2c, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x1a, 0x38, 0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x47, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x54, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x61, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x63, 0x6d, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x67, 0x63, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd6, 0x05, 0x0a, 0x15,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x73, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x73,
	0x6e, 0x12, 0x4b, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0xf0, 0x01, 0x0a, 0x16, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa5, 0x03, 0x0a, 0x11, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f,
	0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a,
	0x0e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x22,
	0xe9, 0x01, 0x0a, 0x13, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x4d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x12, 0x5a, 0x10, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x62,
}

var (
	file_pkg_playstore_playstore_proto_rawDescOnce sync.Once
	file_pkg_playstore_playstore_proto_rawDescData = file_pkg_playstore_playstore_proto_rawDesc
)

func file_pkg_playstore_playstore_proto_rawDescGZIP() []byte {
	file_pkg_playstore_playstore_proto_rawDescOnce.Do(func() {
		file_pkg_playstore_playstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_playstore_playstore_proto_rawDescData)
	})
	return file_pkg_playstore_playstore_proto_rawDescData
}

var file_pkg_playstore_playstore_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_pkg_playstore_playstore_proto_goTypes = []interface{}{
	(*AndroidAppDeliveryData)(nil),                        // 0: AndroidAppDeliveryData
	(*Split)(nil),                                         // 1: Split
	(*AppFileMetadata)(nil),                               // 2: AppFileMetadata
	(*EncryptionParams)(nil),                              // 3: EncryptionParams
	(*HttpCookie)(nil),                                    // 4: HttpCookie
	(*BrowseLink)(nil),                                    // 5: BrowseLink
	(*UnknownCategoryContainer)(nil),                      // 6: UnknownCategoryContainer
	(*CategoryIdContainer)(nil),                           // 7: CategoryIdContainer
	(*BrowseResponse)(nil),                                // 8: BrowseResponse
	(*CategoryContainer)(nil),                             // 9: CategoryContainer
	(*BuyResponse)(nil),                                   // 10: BuyResponse
	(*LineItem)(nil),                                      // 11: LineItem
	(*PurchaseStatusResponse)(nil),                        // 12: PurchaseStatusResponse
	(*DeliveryResponse)(nil),                              // 13: DeliveryResponse
	(*Docid)(nil),                                         // 14: Docid
	(*Install)(nil),                                       // 15: Install
	(*Offer)(nil),                                         // 16: Offer
	(*SubscriptionTerms)(nil),                             // 17: SubscriptionTerms
	(*TimePeriod)(nil),                                    // 18: TimePeriod
	(*PasswordPrompt)(nil),                                // 19: PasswordPrompt
	(*ContainerMetadata)(nil),                             // 20: ContainerMetadata
	(*DebugInfo)(nil),                                     // 21: DebugInfo
	(*BulkDetailsEntry)(nil),                              // 22: BulkDetailsEntry
	(*BulkDetailsRequest)(nil),                            // 23: BulkDetailsRequest
	(*BulkDetailsResponse)(nil),                           // 24: BulkDetailsResponse
	(*DetailsResponse)(nil),                               // 25: DetailsResponse
	(*DeviceConfigurationProto)(nil),                      // 26: DeviceConfigurationProto
	(*Document)(nil),                                      // 27: Document
	(*DocumentVariant)(nil),                               // 28: DocumentVariant
	(*Image)(nil),                                         // 29: Image
	(*TranslatedText)(nil),                                // 30: TranslatedText
	(*AppDetails)(nil),                                    // 31: AppDetails
	(*TestingProgramInfo)(nil),                            // 32: TestingProgramInfo
	(*EarlyAccessInfo)(nil),                               // 33: EarlyAccessInfo
	(*DocumentDetails)(nil),                               // 34: DocumentDetails
	(*FileMetadata)(nil),                                  // 35: FileMetadata
	(*ListResponse)(nil),                                  // 36: ListResponse
	(*DocV1)(nil),                                         // 37: DocV1
	(*DocV2)(nil),                                         // 38: DocV2
	(*Availability)(nil),                                  // 39: Availability
	(*Rule)(nil),                                          // 40: Rule
	(*AggregateRating)(nil),                               // 41: AggregateRating
	(*Payload)(nil),                                       // 42: Payload
	(*ServerMetadata)(nil),                                // 43: ServerMetadata
	(*ServerCookie)(nil),                                  // 44: ServerCookie
	(*ServerCookies)(nil),                                 // 45: ServerCookies
	(*ResponseWrapper)(nil),                               // 46: ResponseWrapper
	(*ServerCommands)(nil),                                // 47: ServerCommands
	(*RelatedSearch)(nil),                                 // 48: RelatedSearch
	(*SearchResponse)(nil),                                // 49: SearchResponse
	(*SearchSuggestResponse)(nil),                         // 50: SearchSuggestResponse
	(*SearchSuggestEntry)(nil),                            // 51: SearchSuggestEntry
	(*TestingProgramResponse)(nil),                        // 52: TestingProgramResponse
	(*TestingProgramResult)(nil),                          // 53: TestingProgramResult
	(*TestingProgramDetails)(nil),                         // 54: TestingProgramDetails
	(*UploadDeviceConfigRequest)(nil),                     // 55: UploadDeviceConfigRequest
	(*UploadDeviceConfigResponse)(nil),                    // 56: UploadDeviceConfigResponse
	(*AndroidCheckinRequest)(nil),                         // 57: AndroidCheckinRequest
	(*AndroidCheckinResponse)(nil),                        // 58: AndroidCheckinResponse
	(*AndroidBuildProto)(nil),                             // 59: AndroidBuildProto
	(*AndroidCheckinProto)(nil),                           // 60: AndroidCheckinProto
	(*BuyResponse_CheckoutInfo)(nil),                      // 61: BuyResponse.CheckoutInfo
	(*BuyResponse_CheckoutInfo_CheckoutOption)(nil),       // 62: BuyResponse.CheckoutInfo.CheckoutOption
	(*DebugInfo_Timing)(nil),                              // 63: DebugInfo.Timing
	(*Image_Dimension)(nil),                               // 64: Image.Dimension
	(*Image_Citation)(nil),                                // 65: Image.Citation
	(*Availability_PerDeviceAvailabilityRestriction)(nil), // 66: Availability.PerDeviceAvailabilityRestriction
	(*SearchSuggestEntry_ImageContainer)(nil),             // 67: SearchSuggestEntry.ImageContainer
	(*SearchSuggestEntry_PackageNameContainer)(nil),       // 68: SearchSuggestEntry.PackageNameContainer
}
var file_pkg_playstore_playstore_proto_depIdxs = []int32{
	2,  // 0: AndroidAppDeliveryData.additionalFile:type_name -> AppFileMetadata
	4,  // 1: AndroidAppDeliveryData.downloadAuthCookie:type_name -> HttpCookie
	3,  // 2: AndroidAppDeliveryData.encryptionParams:type_name -> EncryptionParams
	1,  // 3: AndroidAppDeliveryData.split:type_name -> Split
	29, // 4: BrowseLink.icon:type_name -> Image
	6,  // 5: BrowseLink.unknownCategoryContainer:type_name -> UnknownCategoryContainer
	7,  // 6: UnknownCategoryContainer.categoryIdContainer:type_name -> CategoryIdContainer
	5,  // 7: BrowseResponse.category:type_name -> BrowseLink
	5,  // 8: BrowseResponse.breadcrumb:type_name -> BrowseLink
	9,  // 9: BrowseResponse.categoryContainer:type_name -> CategoryContainer
	5,  // 10: CategoryContainer.category:type_name -> BrowseLink
	61, // 11: BuyResponse.checkoutinfo:type_name -> BuyResponse.CheckoutInfo
	12, // 12: BuyResponse.purchaseStatusResponse:type_name -> PurchaseStatusResponse
	16, // 13: LineItem.offer:type_name -> Offer
	0,  // 14: PurchaseStatusResponse.appDeliveryData:type_name -> AndroidAppDeliveryData
	0,  // 15: DeliveryResponse.appDeliveryData:type_name -> AndroidAppDeliveryData
	16, // 16: Offer.convertedPrice:type_name -> Offer
	17, // 17: Offer.subscriptionTerms:type_name -> SubscriptionTerms
	18, // 18: SubscriptionTerms.recurringPeriod:type_name -> TimePeriod
	18, // 19: SubscriptionTerms.trialPeriod:type_name -> TimePeriod
	63, // 20: DebugInfo.timing:type_name -> DebugInfo.Timing
	38, // 21: BulkDetailsEntry.doc:type_name -> DocV2
	22, // 22: BulkDetailsResponse.entry:type_name -> BulkDetailsEntry
	37, // 23: DetailsResponse.docV1:type_name -> DocV1
	38, // 24: DetailsResponse.docV2:type_name -> DocV2
	14, // 25: Document.docid:type_name -> Docid
	14, // 26: Document.fetchDocid:type_name -> Docid
	14, // 27: Document.sampleDocid:type_name -> Docid
	16, // 28: Document.priceDeprecated:type_name -> Offer
	39, // 29: Document.availability:type_name -> Availability
	29, // 30: Document.image:type_name -> Image
	27, // 31: Document.child:type_name -> Document
	41, // 32: Document.aggregateRating:type_name -> AggregateRating
	16, // 33: Document.offer:type_name -> Offer
	30, // 34: Document.translatedSnippet:type_name -> TranslatedText
	28, // 35: Document.documentVariant:type_name -> DocumentVariant
	27, // 36: Document.decoration:type_name -> Document
	27, // 37: Document.parent:type_name -> Document
	40, // 38: DocumentVariant.rule:type_name -> Rule
	30, // 39: DocumentVariant.autoTranslation:type_name -> TranslatedText
	16, // 40: DocumentVariant.offer:type_name -> Offer
	27, // 41: DocumentVariant.child:type_name -> Document
	27, // 42: DocumentVariant.decoration:type_name -> Document
	64, // 43: Image.dimension:type_name -> Image.Dimension
	65, // 44: Image.citation:type_name -> Image.Citation
	35, // 45: AppDetails.file:type_name -> FileMetadata
	32, // 46: AppDetails.testingProgramInfo:type_name -> TestingProgramInfo
	33, // 47: AppDetails.earlyAccessInfo:type_name -> EarlyAccessInfo
	31, // 48: DocumentDetails.appDetails:type_name -> AppDetails
	38, // 49: ListResponse.doc:type_name -> DocV2
	27, // 50: DocV1.finskyDoc:type_name -> Document
	34, // 51: DocV1.details:type_name -> DocumentDetails
	16, // 52: DocV2.offer:type_name -> Offer
	39, // 53: DocV2.availability:type_name -> Availability
	29, // 54: DocV2.image:type_name -> Image
	38, // 55: DocV2.child:type_name -> DocV2
	20, // 56: DocV2.containerMetadata:type_name -> ContainerMetadata
	34, // 57: DocV2.details:type_name -> DocumentDetails
	40, // 58: Availability.rule:type_name -> Rule
	66, // 59: Availability.perdeviceavailabilityrestriction:type_name -> Availability.PerDeviceAvailabilityRestriction
	15, // 60: Availability.install:type_name -> Install
	40, // 61: Rule.subrule:type_name -> Rule
	36, // 62: Payload.listResponse:type_name -> ListResponse
	25, // 63: Payload.detailsResponse:type_name -> DetailsResponse
	10, // 64: Payload.buyResponse:type_name -> BuyResponse
	49, // 65: Payload.searchResponse:type_name -> SearchResponse
	8,  // 66: Payload.browseResponse:type_name -> BrowseResponse
	12, // 67: Payload.purchaseStatusResponse:type_name -> PurchaseStatusResponse
	24, // 68: Payload.bulkDetailsResponse:type_name -> BulkDetailsResponse
	13, // 69: Payload.deliveryResponse:type_name -> DeliveryResponse
	58, // 70: Payload.androidCheckinResponse:type_name -> AndroidCheckinResponse
	56, // 71: Payload.uploadDeviceConfigResponse:type_name -> UploadDeviceConfigResponse
	50, // 72: Payload.searchSuggestResponse:type_name -> SearchSuggestResponse
	52, // 73: Payload.testingProgramResponse:type_name -> TestingProgramResponse
	44, // 74: ServerCookies.serverCookie:type_name -> ServerCookie
	42, // 75: ResponseWrapper.payload:type_name -> Payload
	47, // 76: ResponseWrapper.commands:type_name -> ServerCommands
	43, // 77: ResponseWrapper.serverMetadata:type_name -> ServerMetadata
	45, // 78: ResponseWrapper.serverCookies:type_name -> ServerCookies
	38, // 79: SearchResponse.doc:type_name -> DocV2
	48, // 80: SearchResponse.relatedSearch:type_name -> RelatedSearch
	51, // 81: SearchSuggestResponse.entry:type_name -> SearchSuggestEntry
	67, // 82: SearchSuggestEntry.imageContainer:type_name -> SearchSuggestEntry.ImageContainer
	68, // 83: SearchSuggestEntry.packageNameContainer:type_name -> SearchSuggestEntry.PackageNameContainer
	53, // 84: TestingProgramResponse.result:type_name -> TestingProgramResult
	54, // 85: TestingProgramResult.details:type_name -> TestingProgramDetails
	26, // 86: UploadDeviceConfigRequest.deviceConfiguration:type_name -> DeviceConfigurationProto
	60, // 87: AndroidCheckinRequest.checkin:type_name -> AndroidCheckinProto
	26, // 88: AndroidCheckinRequest.deviceConfiguration:type_name -> DeviceConfigurationProto
	59, // 89: AndroidCheckinProto.build:type_name -> AndroidBuildProto
	11, // 90: BuyResponse.CheckoutInfo.item:type_name -> LineItem
	11, // 91: BuyResponse.CheckoutInfo.subItem:type_name -> LineItem
	62, // 92: BuyResponse.CheckoutInfo.checkoutoption:type_name -> BuyResponse.CheckoutInfo.CheckoutOption
	11, // 93: BuyResponse.CheckoutInfo.CheckoutOption.item:type_name -> LineItem
	11, // 94: BuyResponse.CheckoutInfo.CheckoutOption.subItem:type_name -> LineItem
	11, // 95: BuyResponse.CheckoutInfo.CheckoutOption.total:type_name -> LineItem
	11, // 96: BuyResponse.CheckoutInfo.CheckoutOption.summary:type_name -> LineItem
	97, // [97:97] is the sub-list for method output_type
	97, // [97:97] is the sub-list for method input_type
	97, // [97:97] is the sub-list for extension type_name
	97, // [97:97] is the sub-list for extension extendee
	0,  // [0:97] is the sub-list for field type_name
}

func init() { file_pkg_playstore_playstore_proto_init() }
func file_pkg_playstore_playstore_proto_init() {
	if File_pkg_playstore_playstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_playstore_playstore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAppDeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Split); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnknownCategoryContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryIdContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Docid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Install); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordPrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConfigurationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslatedText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarlyAccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCookies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerCommands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDeviceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDeviceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidBuildProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse_CheckoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse_CheckoutInfo_CheckoutOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfo_Timing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Citation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability_PerDeviceAvailabilityRestriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestEntry_ImageContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_playstore_playstore_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSuggestEntry_PackageNameContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_playstore_playstore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_playstore_playstore_proto_goTypes,
		DependencyIndexes: file_pkg_playstore_playstore_proto_depIdxs,
		MessageInfos:      file_pkg_playstore_playstore_proto_msgTypes,
	}.Build()
	File_pkg_playstore_playstore_proto = out.File
	file_pkg_playstore_playstore_proto_rawDesc = nil
	file_pkg_playstore_playstore_proto_goTypes = nil
	file_pkg_playstore_playstore_proto_depIdxs = nil
}
